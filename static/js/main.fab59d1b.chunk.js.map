{"version":3,"sources":["App.js","serviceWorker.js","index.js","work-table.png"],"names":["App","state","draft","taskType","taskColor","backgroundColor","AddActive","priority","dateNow","date","fullDate","minimumDate","maximumDate","tasks","id","name","deadlineTask","type","devTasks","verifyTasks","done","doneAt","handleDate","e","_this","setState","target","value","currentTime","Date","year","getFullYear","month","getMonth","day","getDay","time","toLocaleString","hour","minute","hour12","concat","handleInput","Object","defineProperty","handlePriority","handleAddTask","toConsumableArray","Math","random","length","sort","sortToDoTasks","reverse","handlePush","firstArray","secondArray","index","findIndex","task","filterTask","filter","data","passedTime","property","sortOrder","substr","a","b","handleDelete","array","handleDeleteAll","handleSelect","this","_this2","map","react_default","createElement","App_Task","deadline","key","delete","App_DevTasks","App_VerifiedTasks","tasksDone","App_TaskDone","deleteDone","className","htmlFor","onChange","maxLength","placeholder","checked","onClick","style","min","max","src","workTable","alt","margin","borderRight","visibility","display","color","Component","Task","props","toUpperCase","DevTasks","VerifiedTasks","TaskDone","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.fab59d1b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport workTable from \"./work-table.png\";\n\nclass App extends Component {\n  state = {\n    draft: \"\",\n    taskType: \"review\",\n    taskColor: { backgroundColor: \"#57A1C4\" },\n    AddActive: false,\n    priority: false,\n    dateNow: null,\n    date: \"\",\n    fullDate: null,\n    minimumDate: null,\n    maximumDate: null,\n    tasks: [\n      {\n        id: 1,\n        name: \"buy bread\",\n        priority: true,\n        deadlineTask: \"2019-09-10\",\n        type: \"code\",\n        taskColor: { backgroundColor: \"#9370DB\" }\n      },\n      {\n        id: 2,\n        name: \"buy petrol\",\n        priority: false,\n        deadlineTask: \"2019-08-22\",\n        type: \"doc\",\n        taskColor: { backgroundColor: \"#92C1FF\" }\n      }\n    ],\n    devTasks: [],\n    verifyTasks: [],\n    done: [\n      {\n        id: 0,\n        name: \"eat pumpkin\",\n        priority: false,\n        deadlineTask: \"2019-08-22\",\n        doneAt: \"2019-06-22, 11:48 PM\",\n        type: \"code\",\n        taskColor: { backgroundColor: \"#9370DB\" }\n      }\n    ]\n  };\n\n  componentDidMount() {\n    this.currentTime();\n  }\n\n  handleDate = e => {\n    this.setState({\n      date: e.target.value\n    });\n  };\n\n  currentTime = () => {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDay();\n\n    const time = date.toLocaleString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true\n    });\n\n    if (month < 10) {\n      month = `0${month}`;\n    }\n\n    if (day < 10) {\n      day = `0${day}`;\n    }\n\n    this.setState({\n      dateNow: `${year}-${month}-${day}`,\n      date: `${year}-${month}-${day}`,\n      minimumDate: `${year}-${month}-${day}`,\n      maximumDate: `${year + 1}-${month}-${day}`,\n      fullDate: `${year}-${month}-${day}, ${time}`\n    });\n  };\n\n  handleInput = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handlePriority = () => {\n    this.setState({\n      priority: !this.state.priority\n    });\n  };\n\n  handleAddTask = () => {\n    const tasks = [\n      ...this.state.tasks,\n      {\n        id: Math.random() * this.state.tasks.length,\n        name: this.state.draft,\n        priority: this.state.priority,\n        deadlineTask: this.state.date,\n        type: this.state.taskType,\n        taskColor: this.state.taskColor\n      }\n    ]\n      .sort(this.sortToDoTasks(\"priority\"))\n      .sort(this.sortToDoTasks(\"type\"));\n\n    if (this.state.draft !== \"\") {\n      this.setState({\n        tasks: tasks.reverse(),\n        draft: \"\",\n        priority: false,\n        date: this.state.dateNow,\n        taskType: \"review\",\n        taskColor: { backgroundColor: \"#57A1C4\" },\n        AddActive: false\n      });\n    } else {\n      this.setState({\n        AddActive: true\n      });\n    }\n  };\n\n  handlePush = (id, firstArray, secondArray) => {\n    const tasks = [...firstArray];\n\n    const index = tasks.findIndex(task => task.id === id);\n    const filterTask = tasks.filter(task => task.id !== id);\n    const data = {\n      id: Math.random() * secondArray.length,\n      name: tasks[index].name,\n      priority: tasks[index].priority,\n      deadlineTask: tasks[index].deadlineTask,\n      passedTime: this.state.fullDate,\n      type: tasks[index].type,\n      taskColor: tasks[index].taskColor\n    };\n\n    if (firstArray === this.state.tasks) {\n      this.setState({\n        tasks: filterTask,\n        devTasks: [...secondArray, data]\n      });\n    } else if (firstArray === this.state.devTasks) {\n      this.setState({\n        devTasks: filterTask,\n        verifyTasks: [...secondArray, data]\n      });\n    } else if (firstArray === this.state.verifyTasks) {\n      this.setState({\n        verifyTasks: filterTask,\n        done: [...secondArray, data]\n      });\n    }\n  };\n\n  sortToDoTasks = property => {\n    let sortOrder = 1;\n    if (property[0] === \"-\") {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return (a, b) => {\n      let result =\n        a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n      return result * sortOrder;\n    };\n  };\n\n  handleDelete = (id, array) => {\n    const tasks = [...array];\n    const filterTask = tasks.filter(task => task.id !== id);\n    if (array === this.state.tasks) {\n      this.setState({\n        tasks: filterTask\n      });\n    } else if (array === this.state.done) {\n      this.setState({\n        done: filterTask\n      });\n    }\n  };\n\n  handleDeleteAll = e => {\n    const id = e.target.id;\n    if (id === \"tasks\") {\n      this.setState({\n        [id]: []\n      });\n    } else if (id === \"done\") {\n      this.setState({\n        [id]: []\n      });\n    }\n  };\n\n  handleSelect = e => {\n    this.setState({\n      taskType: e.target.value\n    });\n\n    switch (e.target.value) {\n      case \"review\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#57A1C4\" }\n        });\n      case \"code\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#9370DB\" }\n        });\n      case \"test\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#CBC8C8\" }\n        });\n      case \"doc\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#92C1FF\" }\n        });\n      case \"analyse\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#68D384\" }\n        });\n      case \"ext\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#E5AE3A\" }\n        });\n      case \"others\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#8F9A9F\" }\n        });\n      default:\n        return this.setState({\n          taskColor: { backgroundColor: \"black\" }\n        });\n    }\n  };\n\n  render() {\n    const tasks = this.state.tasks.map(task => (\n      <Task\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        priority={task.priority}\n        key={task.id}\n        name={task.name}\n        delete={() => this.handleDelete(task.id, this.state.tasks)}\n        done={() =>\n          this.handlePush(task.id, this.state.tasks, this.state.devTasks)\n        }\n      />\n    ));\n\n    const devTasks = this.state.devTasks.map(task => (\n      <DevTasks\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.passedTime}\n        priority={task.priority}\n        doneAt={task.doneAt}\n        key={task.id}\n        name={task.name}\n        done={() =>\n          this.handlePush(task.id, this.state.devTasks, this.state.verifyTasks)\n        }\n      />\n    ));\n\n    const verifyTasks = this.state.verifyTasks.map(task => (\n      <VerifiedTasks\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.passedTime}\n        priority={task.priority}\n        doneAt={task.doneAt}\n        key={task.id}\n        name={task.name}\n        done={() =>\n          this.handlePush(task.id, this.state.verifyTasks, this.state.done)\n        }\n      />\n    ));\n\n    const tasksDone = this.state.done.map(task => (\n      <TaskDone\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.doneAt}\n        priority={task.priority}\n        doneAt={task.doneAt}\n        key={task.id}\n        name={task.name}\n        deleteDone={() => this.handleDelete(task.id, this.state.done)}\n      />\n    ));\n\n    return (\n      <div className=\"App\">\n        <div className=\"InputArea\">\n          <h2>Your Scrum Board</h2>\n          <div className=\"inputField\">\n            <label htmlFor=\"inp\" className=\"inp\">\n              <input\n                id=\"inp\"\n                type=\"text\"\n                name=\"draft\"\n                value={this.state.draft}\n                onChange={this.handleInput}\n                maxLength=\"30\"\n                placeholder=\"&nbsp;\"\n              />\n              <span className=\"label\">Input task</span>\n              <span className=\"border\" />\n            </label>\n\n            <div className=\"squaredCheckbox\">\n              <label htmlFor=\"checkb\">\n                <input\n                  type=\"checkbox\"\n                  id=\"checkb\"\n                  checked={this.state.priority}\n                  onChange={this.handlePriority}\n                />\n                <label htmlFor=\"mark\" />\n                <i>High priority</i>\n              </label>\n            </div>\n\n            <div className=\"AddBtnContainer\">\n              <button\n                id=\"addBtn\"\n                className=\"btn btn-primary\"\n                onClick={this.handleAddTask}\n              >\n                Add ✚\n              </button>\n              <p>\n                {this.state.AddActive && this.state.draft === \"\"\n                  ? `Fill task field firstly`\n                  : null}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"selectBox\">\n            <label htmlFor=\"choice\">\n              <p>Task type: </p>\n              <select\n                style={this.state.taskColor}\n                value={this.state.taskType}\n                onChange={this.handleSelect}\n                id=\"choice\"\n              >\n                <option value=\"review\">Review</option>\n                <option value=\"code\">Code</option>\n                <option value=\"test\">Test</option>\n                <option value=\"doc\">Document</option>\n                <option value=\"analyse\">Analyze</option>\n                <option value=\"ext\">Fix</option>\n                <option value=\"others\">Others</option>\n              </select>\n            </label>\n          </div>\n\n          <div className=\"deadlineDate\">\n            <label htmlFor=\"date\">\n              <p>Deadline date: </p>\n              <input\n                id=\"date\"\n                type=\"date\"\n                value={this.state.date}\n                min={this.state.minimumDate}\n                max={this.state.maximumDate}\n                onChange={this.handleDate}\n              />\n            </label>\n          </div>\n\n          <img src={workTable} alt=\"work-table\" />\n        </div>\n        <hr />\n\n        <div className=\"row\" style={{ margin: 0 }}>\n          <div className=\"col-xl-3\" style={{ borderRight: \"2px solid black\" }}>\n            <div className=\"TasksToDoHeader\">\n              <h2>To do ({this.state.tasks.length})</h2>{\" \"}\n              <h6>\n                <i>(ordered by priority & task type)</i>\n              </h6>\n              <button\n                style={\n                  this.state.tasks.length > 0\n                    ? { visibility: \"visible\" }\n                    : { visibility: \"hidden\" }\n                }\n                id=\"tasks\"\n                className=\"btn btn-danger\"\n                onClick={this.handleDeleteAll}\n              >\n                Delete all\n              </button>\n              <h3\n                style={\n                  this.state.tasks.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None tasks to be done !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{tasks}</div>\n          </div>\n\n          <div className=\"col-xl-3\" style={{ borderRight: \"2px solid black\" }}>\n            <div className=\"TasksToDoHeader\">\n              <h2>Dev ({this.state.devTasks.length})</h2>{\" \"}\n              <h3\n                style={\n                  this.state.devTasks.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None tasks to be developed !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{devTasks}</div>\n          </div>\n\n          <div className=\"col-xl-3\" style={{ borderRight: \"2px solid black\" }}>\n            <div className=\"TasksToDoHeader\">\n              <h2>Test ({this.state.verifyTasks.length})</h2>{\" \"}\n              <h3\n                style={\n                  this.state.verifyTasks.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None tasks to be verified !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{verifyTasks}</div>\n          </div>\n\n          <div className=\"col-xl-3\">\n            <div className=\"TasksToDoHeader\">\n              <h2>Done ({this.state.done.length})</h2>{\" \"}\n              <button\n                style={\n                  this.state.done.length > 0\n                    ? { visibility: \"visible\" }\n                    : { visibility: \"hidden\" }\n                }\n                id=\"done\"\n                className=\"btn btn-danger\"\n                onClick={this.handleDeleteAll}\n              >\n                Delete all\n              </button>\n              <h3\n                style={\n                  this.state.done.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None task is done !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{tasksDone}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Task = props => {\n  return (\n    <div>\n      <div className=\"singleTask\" style={props.taskColor}>\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n          <button className=\"btn btn-danger\" onClick={props.delete}>\n            ✘\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nconst DevTasks = props => {\n  return (\n    <div>\n      <div className=\"singleTask\" style={props.taskColor}>\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `passed: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nconst VerifiedTasks = props => {\n  return (\n    <div>\n      <div className=\"singleTask\" style={props.taskColor}>\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `passed: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nconst TaskDone = props => {\n  return (\n    <div>\n      <div className=\"singleTask\" style={props.taskColor}>\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-danger\" onClick={props.deleteDone}>\n            ✘\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `done: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/work-table.b88d4dfe.png\";"],"sourceRoot":""}