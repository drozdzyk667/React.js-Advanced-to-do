{"version":3,"sources":["components/taskToDo.js","components/devTasks.js","components/verifiedTasks.js","components/taskDone.js","App.js","serviceWorker.js","index.js","work-table.png"],"names":["TaskToDo","props","react_default","a","createElement","className","style","taskColor","onClick","done","delete","taskType","priority","name","toUpperCase","deadline","concat","DevTasks","date","VerifiedTasks","TaskDone","deleteDone","App","state","draft","filterType","backgroundColor","filterColor","AddActive","dateNow","fullDate","minimumDate","maximumDate","currentPageTasks","currentPageDev","currentPageVerify","currentPageDone","tasksPerPage","pageNumbers","tasks","id","deadlineTask","type","devTasks","verifyTasks","passedTime","handleDate","e","_this","setState","target","value","currentTime","Date","year","getFullYear","month","getMonth","day","getDay","time","toLocaleString","hour","minute","hour12","handleClickPage","array","_this$state","handleInput","Object","defineProperty","handlePriority","handleEnter","key","handleAddTask","_this$state2","length","toConsumableArray","Math","random","sort","sortToDoTasks","reverse","handlePush","firstArray","secondArray","arrCopy","index","findIndex","task","_arrCopy$index","_this$state3","filterTask","filter","data","property","sortOrder","substr","b","handleDelete","_this$state4","handleDeleteAll","_this$setState2","_this$setState3","handleSelect","handleFilterAll","this","filtertaskTasks","filtertaskDev","filtertaskVerify","filtertaskDone","_this2","_this$state5","_this$state6","indexOfLastTasks","indexOfFirstTasks","current1","currentTasks","slice","indexOfLastDev","indexOfFirstDev","current2","currentDev","indexOfLastVerify","indexOfFirstVerify","current3","currentVerify","indexOfLastDone","indexOfFirstDone","current4","currentDone","pageNumbers1","i","ceil","push","pageNumbers2","pageNumbers3","pageNumbers4","renderPageNumbers1","map","number","renderPageNumbers2","renderPageNumbers3","renderPageNumbers4","tasksToDo","taskToDo","dev","components_devTasks","verify","verifiedTasks","tasksDone","taskDone","htmlFor","onChange","maxLength","placeholder","onKeyPress","checked","min","max","src","workTable","alt","margin","borderRight","color","fontSize","visibility","display","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.df839d15.chunk.js","sourcesContent":["import React from \"react\";\n\nconst TaskToDo = props => {\n  return (\n    <div>\n      <div className=\"singleTask\" style={props.taskColor}>\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n          <button className=\"btn btn-danger\" onClick={props.delete}>\n            ✘\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskToDo;\n","import React from \"react\";\n\nconst DevTasks = props => {\n  return (\n    <div>\n      <div className=\"singleTask\" style={props.taskColor}>\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `passed: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default DevTasks;\n","import React from \"react\";\n\nconst VerifiedTasks = props => {\n  return (\n    <div>\n      <div className=\"singleTask\" style={props.taskColor}>\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `passed: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default VerifiedTasks;\n","import React from \"react\";\n\nconst TaskDone = props => {\n  return (\n    <div>\n      <div className=\"singleTask\" style={props.taskColor}>\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-danger\" onClick={props.deleteDone}>\n            ✘\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `done: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDone;\n","import React, { Component } from \"react\";\nimport TaskToDo from \"./components/taskToDo\";\nimport DevTasks from \"./components/devTasks\";\nimport VerifiedTasks from \"./components/verifiedTasks\";\nimport TaskDone from \"./components/taskDone\";\nimport \"./App.scss\";\nimport workTable from \"./work-table.png\";\n\nclass App extends Component {\n  state = {\n    draft: \"\",\n    taskType: \"review\",\n    filterType: \"all\",\n    taskColor: { backgroundColor: \"#57A1C4\" },\n    filterColor: { backgroundColor: \"#FAA\" },\n    AddActive: false,\n    priority: false,\n    dateNow: null,\n    date: \"\",\n    fullDate: null,\n    minimumDate: null,\n    maximumDate: null,\n    currentPageTasks: 1,\n    currentPageDev: 1,\n    currentPageVerify: 1,\n    currentPageDone: 1,\n    tasksPerPage: 3,\n    pageNumbers: [],\n    tasks: [\n      {\n        id: 1,\n        name: \"function to solve problem with ...\",\n        priority: true,\n        deadlineTask: \"2019-09-10\",\n        type: \"code\",\n        taskColor: { backgroundColor: \"#9370DB\" }\n      },\n      {\n        id: 2,\n        name: \"write report about ... issue\",\n        priority: false,\n        deadlineTask: \"2019-08-22\",\n        type: \"doc\",\n        taskColor: { backgroundColor: \"#92C1FF\" }\n      }\n    ],\n    devTasks: [],\n    verifyTasks: [],\n    done: [\n      {\n        id: 0,\n        name: \"display data from ...\",\n        priority: false,\n        deadlineTask: \"2019-08-22\",\n        passedTime: \"2019-06-22, 11:48 PM\",\n        type: \"code\",\n        taskColor: { backgroundColor: \"#9370DB\" }\n      }\n    ]\n  };\n\n  componentDidMount() {\n    this.currentTime();\n  }\n\n  handleDate = e => {\n    this.setState({\n      date: e.target.value\n    });\n  };\n\n  currentTime = () => {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDay();\n\n    const time = date.toLocaleString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true\n    });\n\n    if (month < 10) {\n      month = `0${month}`;\n    }\n\n    if (day < 10) {\n      day = `0${day}`;\n    }\n\n    this.setState({\n      dateNow: `${year}-${month}-${day}`,\n      date: `${year}-${month}-${day}`,\n      minimumDate: `${year}-${month}-${day}`,\n      maximumDate: `${year + 1}-${month}-${day}`,\n      fullDate: `${year}-${month}-${day}, ${time}`\n    });\n  };\n\n  handleClickPage = (e, array) => {\n    const { tasks, done, devTasks, verifyTasks } = this.state;\n\n    if (array === tasks) {\n      this.setState({\n        currentPageTasks: e.target.id\n      });\n    } else if (array === devTasks) {\n      this.setState({\n        currentPageDev: e.target.id\n      });\n    } else if (array === verifyTasks) {\n      this.setState({\n        currentPageVerify: e.target.id\n      });\n    } else if (array === done) {\n      this.setState({\n        currentPageDone: e.target.id\n      });\n    }\n  };\n\n  handleInput = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handlePriority = () => {\n    this.setState({\n      priority: !this.state.priority\n    });\n  };\n\n  handleEnter = e => {\n    if (e.key === \"Enter\") {\n      this.handleAddTask();\n    }\n  };\n\n  handleAddTask = () => {\n    const { draft, priority, date, taskType, taskColor } = this.state;\n    if (this.state.tasks.length < 30) {\n      const tasks = [\n        ...this.state.tasks,\n        {\n          id: Math.random() * this.state.tasks.length,\n          name: draft,\n          priority: priority,\n          deadlineTask: date,\n          type: taskType,\n          taskColor: taskColor\n        }\n      ]\n        .sort(this.sortToDoTasks(\"priority\"))\n        .sort(this.sortToDoTasks(\"type\"));\n\n      if (this.state.draft !== \"\") {\n        this.setState({\n          tasks: tasks.reverse(),\n          draft: \"\",\n          priority: false,\n          date: this.state.dateNow,\n          taskType: \"review\",\n          taskColor: { backgroundColor: \"#57A1C4\" },\n          AddActive: false\n        });\n      } else {\n        this.setState({\n          AddActive: true\n        });\n      }\n    }\n  };\n\n  handlePush = (id, firstArray, secondArray) => {\n    const arrCopy = [...firstArray];\n\n    const index = arrCopy.findIndex(task => task.id === id);\n    const { name, priority, deadlineTask, type, taskColor } = arrCopy[index];\n    const {\n      tasks,\n      devTasks,\n      verifyTasks,\n      done,\n      currentPageDev,\n      currentPageDone,\n      currentPageTasks,\n      currentPageVerify\n    } = this.state;\n\n    const filterTask = arrCopy.filter(task => task.id !== id);\n    const data = {\n      id: Math.random() * secondArray.length,\n      name: name,\n      priority: priority,\n      deadlineTask: deadlineTask,\n      passedTime: this.state.fullDate,\n      type: type,\n      taskColor: taskColor\n    };\n\n    if (firstArray === tasks && secondArray.length < 30) {\n      this.setState({\n        tasks: filterTask,\n        devTasks: [...secondArray, data]\n      });\n    } else if (firstArray === devTasks && secondArray.length < 30) {\n      this.setState({\n        devTasks: filterTask,\n        verifyTasks: [...secondArray, data]\n      });\n    } else if (firstArray === verifyTasks && secondArray.length < 30) {\n      this.setState({\n        verifyTasks: filterTask,\n        done: [...secondArray, data]\n      });\n    }\n\n    if (tasks.length === 4) {\n      this.setState({\n        currentPageTasks: 1\n      });\n    } else if (tasks.length % 3 === 1 && currentPageTasks !== 1) {\n      this.setState({\n        currentPageTasks: currentPageTasks - 1\n      });\n    }\n\n    if (devTasks.length === 4) {\n      this.setState({\n        currentPageDev: 1\n      });\n    } else if (devTasks.length % 3 === 1 && currentPageDev !== 1) {\n      this.setState({\n        currentPageDev: currentPageDev - 1\n      });\n    }\n\n    if (verifyTasks.length === 4) {\n      this.setState({\n        currentPageVerify: 1\n      });\n    } else if (verifyTasks.length % 3 === 1 && currentPageVerify !== 1) {\n      this.setState({\n        currentPageVerify: currentPageVerify - 1\n      });\n    }\n\n    if (done.length === 4) {\n      this.setState({\n        currentPageDone: 1\n      });\n    } else if (done.length % 3 === 1 && currentPageDone !== 1) {\n      this.setState({\n        currentPageDone: currentPageDone - 1\n      });\n    }\n  };\n\n  sortToDoTasks = property => {\n    let sortOrder = 1;\n    if (property[0] === \"-\") {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return (a, b) => {\n      let result =\n        a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n      return result * sortOrder;\n    };\n  };\n\n  handleDelete = (id, array) => {\n    const { tasks, currentPageTasks, currentPageDone, done } = this.state;\n\n    const arrCopy = [...array];\n    const filterTask = arrCopy.filter(task => task.id !== id);\n    if (array === tasks) {\n      this.setState({\n        tasks: filterTask\n      });\n    } else if (array === done) {\n      this.setState({\n        done: filterTask\n      });\n    }\n\n    if (tasks.length === 4) {\n      this.setState({\n        currentPageTasks: 1\n      });\n    } else if (tasks.length % 3 === 1 && currentPageTasks !== 1) {\n      this.setState({\n        currentPageTasks: currentPageTasks - 1\n      });\n    }\n\n    if (done.length === 4) {\n      this.setState({\n        currentPageDone: 1\n      });\n    } else if (done.length % 3 === 1 && currentPageDone !== 1) {\n      this.setState({\n        currentPageDone: currentPageDone - 1\n      });\n    }\n  };\n\n  handleDeleteAll = e => {\n    const id = e.target.id;\n    if (id === \"tasks\") {\n      this.setState({\n        [id]: [],\n        currentPageTasks: 1\n      });\n    } else if (id === \"done\") {\n      this.setState({\n        [id]: [],\n        currentPageDone: 1\n      });\n    }\n  };\n\n  handleSelect = e => {\n    this.setState({\n      taskType: e.target.value\n    });\n\n    switch (e.target.value) {\n      case \"review\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#57A1C4\" }\n        });\n      case \"code\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#9370DB\" }\n        });\n      case \"test\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#CBC8C8\" }\n        });\n      case \"doc\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#92C1FF\" }\n        });\n      case \"analyze\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#68D384\" }\n        });\n      case \"fix\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#E5AE3A\" }\n        });\n      case \"others\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#8F9A9F\" }\n        });\n      default:\n        return this.setState({\n          taskColor: { backgroundColor: \"black\" }\n        });\n    }\n  };\n\n  handleFilterAll = e => {\n    this.setState({\n      filterType: e.target.value,\n      currentPageTasks: 1,\n      currentPageDev: 1,\n      currentPageVerify: 1,\n      currentPageDone: 1\n    });\n  };\n\n  render() {\n    const { filterType, tasks, devTasks, verifyTasks, done } = this.state;\n\n    let filtertaskTasks;\n    let filtertaskDev;\n    let filtertaskVerify;\n    let filtertaskDone;\n\n    switch (filterType) {\n      case \"review\":\n        filtertaskTasks = tasks.filter(task => task.type === \"review\");\n        filtertaskDev = devTasks.filter(task => task.type === \"review\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"review\");\n        filtertaskDone = done.filter(task => task.type === \"review\");\n        break;\n      case \"code\":\n        filtertaskTasks = tasks.filter(task => task.type === \"code\");\n        filtertaskDev = devTasks.filter(task => task.type === \"code\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"code\");\n        filtertaskDone = done.filter(task => task.type === \"code\");\n        break;\n      case \"test\":\n        filtertaskTasks = tasks.filter(task => task.type === \"test\");\n        filtertaskDev = devTasks.filter(task => task.type === \"test\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"test\");\n        filtertaskDone = done.filter(task => task.type === \"test\");\n        break;\n      case \"doc\":\n        filtertaskTasks = tasks.filter(task => task.type === \"doc\");\n        filtertaskDev = devTasks.filter(task => task.type === \"doc\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"doc\");\n        filtertaskDone = done.filter(task => task.type === \"doc\");\n        break;\n      case \"analyze\":\n        filtertaskTasks = tasks.filter(task => task.type === \"analyze\");\n        filtertaskDev = devTasks.filter(task => task.type === \"analyze\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"analyze\");\n        filtertaskDone = done.filter(task => task.type === \"analyze\");\n        break;\n      case \"fix\":\n        filtertaskTasks = tasks.filter(task => task.type === \"fix\");\n        filtertaskDev = devTasks.filter(task => task.type === \"fix\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"fix\");\n        filtertaskDone = done.filter(task => task.type === \"fix\");\n        break;\n      case \"others\":\n        filtertaskTasks = tasks.filter(task => task.type === \"others\");\n        filtertaskDev = devTasks.filter(task => task.type === \"others\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"others\");\n        filtertaskDone = done.filter(task => task.type === \"others\");\n        break;\n      default:\n        filtertaskTasks = tasks.filter(task => task.type !== \"all\");\n        filtertaskDev = devTasks.filter(task => task.type !== \"all\");\n        filtertaskVerify = verifyTasks.filter(task => task.type !== \"all\");\n        filtertaskDone = done.filter(task => task.type !== \"all\");\n        break;\n    }\n\n    const {\n      currentPageDev,\n      currentPageDone,\n      currentPageTasks,\n      currentPageVerify,\n      tasksPerPage\n    } = this.state;\n\n    // Logic for displaying current tasks in pagination\n    const indexOfLastTasks = currentPageTasks * tasksPerPage;\n    const indexOfFirstTasks = indexOfLastTasks - tasksPerPage;\n    let current1 = [...filtertaskTasks];\n    const currentTasks = current1.slice(indexOfFirstTasks, indexOfLastTasks);\n\n    const indexOfLastDev = currentPageDev * tasksPerPage;\n    const indexOfFirstDev = indexOfLastDev - tasksPerPage;\n    let current2 = [...filtertaskDev];\n    const currentDev = current2.slice(indexOfFirstDev, indexOfLastDev);\n\n    const indexOfLastVerify = currentPageVerify * tasksPerPage;\n    const indexOfFirstVerify = indexOfLastVerify - tasksPerPage;\n    let current3 = [...filtertaskVerify];\n    const currentVerify = current3.slice(indexOfFirstVerify, indexOfLastVerify);\n\n    const indexOfLastDone = currentPageDone * tasksPerPage;\n    const indexOfFirstDone = indexOfLastDone - tasksPerPage;\n    let current4 = [...filtertaskDone];\n    const currentDone = current4.slice(indexOfFirstDone, indexOfLastDone);\n\n    // Logic for displaying page numbers\n    const pageNumbers1 = [];\n    for (let i = 1; i <= Math.ceil(current1.length / tasksPerPage); i++) {\n      pageNumbers1.push(i);\n    }\n\n    const pageNumbers2 = [];\n    for (let i = 1; i <= Math.ceil(current2.length / tasksPerPage); i++) {\n      pageNumbers2.push(i);\n    }\n\n    const pageNumbers3 = [];\n    for (let i = 1; i <= Math.ceil(current3.length / tasksPerPage); i++) {\n      pageNumbers3.push(i);\n    }\n\n    const pageNumbers4 = [];\n    for (let i = 1; i <= Math.ceil(current4.length / tasksPerPage); i++) {\n      pageNumbers4.push(i);\n    }\n\n    const renderPageNumbers1 = pageNumbers1.map(number => {\n      return (\n        <button\n          className=\"paginat btn btn-info btn-sm\"\n          key={number}\n          id={number}\n          onClick={e => {\n            this.handleClickPage(e, this.state.tasks);\n          }}\n        >\n          {number}\n        </button>\n      );\n    });\n\n    const renderPageNumbers2 = pageNumbers2.map(number => {\n      return (\n        <button\n          className=\"paginat btn btn-info btn-sm\"\n          key={number}\n          id={number}\n          onClick={e => {\n            this.handleClickPage(e, this.state.devTasks);\n          }}\n        >\n          {number}\n        </button>\n      );\n    });\n\n    const renderPageNumbers3 = pageNumbers3.map(number => {\n      return (\n        <button\n          className=\"paginat btn btn-info btn-sm\"\n          key={number}\n          id={number}\n          onClick={e => {\n            this.handleClickPage(e, this.state.verifyTasks);\n          }}\n        >\n          {number}\n        </button>\n      );\n    });\n\n    const renderPageNumbers4 = pageNumbers4.map(number => {\n      return (\n        <button\n          className=\"paginat btn btn-info btn-sm\"\n          key={number}\n          id={number}\n          onClick={e => {\n            this.handleClickPage(e, this.state.done);\n          }}\n        >\n          {number}\n        </button>\n      );\n    });\n\n    const tasksToDo = currentTasks.map(task => (\n      <TaskToDo\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        priority={task.priority}\n        key={task.id}\n        name={task.name}\n        delete={() => this.handleDelete(task.id, this.state.tasks)}\n        done={() =>\n          this.handlePush(task.id, this.state.tasks, this.state.devTasks)\n        }\n      />\n    ));\n\n    const dev = currentDev.map(task => (\n      <DevTasks\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.passedTime}\n        priority={task.priority}\n        key={task.id}\n        name={task.name}\n        done={() =>\n          this.handlePush(task.id, this.state.devTasks, this.state.verifyTasks)\n        }\n      />\n    ));\n\n    const verify = currentVerify.map(task => (\n      <VerifiedTasks\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.passedTime}\n        priority={task.priority}\n        key={task.id}\n        name={task.name}\n        done={() =>\n          this.handlePush(task.id, this.state.verifyTasks, this.state.done)\n        }\n      />\n    ));\n\n    const tasksDone = currentDone.map(task => (\n      <TaskDone\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.passedTime}\n        priority={task.priority}\n        key={task.id}\n        name={task.name}\n        deleteDone={() => this.handleDelete(task.id, this.state.done)}\n      />\n    ));\n\n    return (\n      <div className=\"App\">\n        <div className=\"InputArea\">\n          <h2>Your Scrum Board</h2>\n          <div className=\"inputField\">\n            <label htmlFor=\"inp\" className=\"inp\">\n              <input\n                id=\"inp\"\n                type=\"text\"\n                name=\"draft\"\n                value={this.state.draft}\n                onChange={this.handleInput}\n                maxLength=\"30\"\n                placeholder=\"&nbsp;\"\n                onKeyPress={this.handleEnter}\n              />\n              <span className=\"label\">Input task</span>\n              <span className=\"border\" />\n            </label>\n\n            <div className=\"squaredCheckbox\">\n              <label htmlFor=\"checkb\">\n                <input\n                  type=\"checkbox\"\n                  id=\"checkb\"\n                  checked={this.state.priority}\n                  onChange={this.handlePriority}\n                />\n                <label htmlFor=\"mark\" />\n                <i>High priority</i>\n              </label>\n            </div>\n\n            <div className=\"AddBtnContainer\">\n              <button\n                id=\"addBtn\"\n                className=\"btn btn-primary\"\n                onClick={this.handleAddTask}\n              >\n                Add ✚\n              </button>\n              <p>\n                {this.state.AddActive && this.state.draft === \"\"\n                  ? `Fill task field firstly`\n                  : null}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"selectBox\">\n            <label htmlFor=\"choice\">\n              <p>Task type: </p>\n              <select\n                style={this.state.taskColor}\n                value={this.state.taskType}\n                onChange={this.handleSelect}\n                id=\"choice\"\n              >\n                <option value=\"review\">Review</option>\n                <option value=\"code\">Code</option>\n                <option value=\"test\">Test</option>\n                <option value=\"doc\">Document</option>\n                <option value=\"analyze\">Analyze</option>\n                <option value=\"fix\">Fix</option>\n                <option value=\"others\">Others</option>\n              </select>\n            </label>\n          </div>\n\n          <div className=\"deadlineDate\">\n            <label htmlFor=\"date\">\n              <p>Deadline date: </p>\n              <input\n                id=\"date\"\n                type=\"date\"\n                value={this.state.date}\n                min={this.state.minimumDate}\n                max={this.state.maximumDate}\n                onChange={this.handleDate}\n              />\n            </label>\n          </div>\n\n          <img src={workTable} alt=\"work-table\" />\n        </div>\n\n        <div className=\"selectBox\">\n          <label htmlFor=\"filter\">\n            <p>Filter: </p>\n            <select\n              value={this.state.filterType}\n              onChange={this.handleFilterAll}\n              id=\"filter\"\n            >\n              <option value=\"all\">All</option>\n              <option value=\"review\">Review</option>\n              <option value=\"code\">Code</option>\n              <option value=\"test\">Test</option>\n              <option value=\"doc\">Document</option>\n              <option value=\"analyze\">Analyze</option>\n              <option value=\"fix\">Fix</option>\n              <option value=\"others\">Others</option>\n            </select>\n          </label>\n        </div>\n        <hr />\n\n        <div className=\"row\" style={{ margin: 0 }}>\n          <div className=\"col-xl-3\" style={{ borderRight: \"2px solid black\" }}>\n            <div className=\"TasksToDoHeader\">\n              <h2\n                style={this.state.tasks.length === 30 ? { color: \"red\" } : null}\n              >\n                To do ({this.state.tasks.length})\n                <i style={{ fontSize: \"18px\" }}>/30 </i>\n              </h2>{\" \"}\n              <h6>\n                <i>(ordered by task type and priority in there)</i>\n              </h6>\n              <button\n                style={\n                  this.state.tasks.length > 0\n                    ? { visibility: \"visible\" }\n                    : { visibility: \"hidden\" }\n                }\n                id=\"tasks\"\n                className=\"btn btn-danger\"\n                onClick={this.handleDeleteAll}\n              >\n                Delete all\n              </button>\n              <div>\n                <b\n                  id=\"page-numbers\"\n                  style={\n                    pageNumbers1.length < 2\n                      ? { display: \"none\" }\n                      : { display: \"block\" }\n                  }\n                >\n                  {renderPageNumbers1}\n                </b>\n              </div>\n              <h3\n                style={\n                  this.state.tasks.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None tasks to be done !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{tasksToDo}</div>\n          </div>\n\n          <div className=\"col-xl-3\" style={{ borderRight: \"2px solid black\" }}>\n            <div className=\"TasksToDoHeader\">\n              <h2\n                style={\n                  this.state.devTasks.length === 30 ? { color: \"red\" } : null\n                }\n              >\n                Dev ({this.state.devTasks.length})\n                <i style={{ fontSize: \"18px\" }}>/30 </i>\n              </h2>\n              <div>\n                <b\n                  id=\"page-numbers\"\n                  style={\n                    pageNumbers2.length < 2\n                      ? { display: \"none\" }\n                      : { display: \"block\" }\n                  }\n                >\n                  {renderPageNumbers2}\n                </b>\n              </div>\n              <h3\n                style={\n                  this.state.devTasks.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None tasks to be developed !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{dev}</div>\n          </div>\n\n          <div className=\"col-xl-3\" style={{ borderRight: \"2px solid black\" }}>\n            <div className=\"TasksToDoHeader\">\n              <h2\n                style={\n                  this.state.verifyTasks.length === 30 ? { color: \"red\" } : null\n                }\n              >\n                Test ({this.state.verifyTasks.length})\n                <i style={{ fontSize: \"18px\" }}>/30 </i>\n              </h2>\n              <div>\n                <b\n                  id=\"page-numbers\"\n                  style={\n                    pageNumbers3.length < 2\n                      ? { display: \"none\" }\n                      : { display: \"block\" }\n                  }\n                >\n                  {renderPageNumbers3}\n                </b>\n              </div>\n              <h3\n                style={\n                  this.state.verifyTasks.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None tasks to be verified !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{verify}</div>\n          </div>\n\n          <div className=\"col-xl-3\">\n            <div className=\"TasksToDoHeader\">\n              <h2\n                style={this.state.done.length === 30 ? { color: \"red\" } : null}\n              >\n                Done ({this.state.done.length})\n                <i style={{ fontSize: \"18px\" }}>/30 </i>\n              </h2>\n              <button\n                style={\n                  this.state.done.length > 0\n                    ? { visibility: \"visible\" }\n                    : { visibility: \"hidden\" }\n                }\n                id=\"done\"\n                className=\"btn btn-danger\"\n                onClick={this.handleDeleteAll}\n              >\n                Delete all\n              </button>\n              <div>\n                <b\n                  id=\"page-numbers\"\n                  style={\n                    pageNumbers4.length < 2\n                      ? { display: \"none\" }\n                      : { display: \"block\" }\n                  }\n                >\n                  {renderPageNumbers4}\n                </b>\n              </div>\n              <h3\n                style={\n                  this.state.done.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None task is done !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{tasksDone}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/work-table.b88d4dfe.png\";"],"sourceRoot":""}