{"version":3,"sources":["components/inputArea/work-table.png","components/blobs/blobs.js","components/inputArea/inputArea.js","components/filtering/filtering.js","components/board/taskElements/taskToDo.js","components/board/taskElements/devTasks.js","components/board/taskElements/verifiedTasks.js","components/board/taskElements/taskDone.js","components/board/taskList/columnToDo.js","components/board/taskList/columnDev.js","components/board/taskList/columnVerify.js","components/board/taskList/columnDone.js","components/board/board.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Blobs","react_default","a","createElement","Fragment","className","xlinkHref","mask","width","height","preserveAspectRatio","id","in","stdDeviation","result","mode","values","x","y","style","filter","cx","cy","r","fill","stroke","InputArea","props","htmlFor","type","name","value","draft","onChange","input","maxLength","placeholder","onKeyPress","enter","checked","priority","priorityStatus","onClick","addTask","addActive","color","select","date","min","minimumDate","max","maximumDate","handleDate","src","workTable","alt","Filtering","filterType","filterAll","tasksPerPage","handleTasksPerPage","TaskToDo","taskColor","done","delete","taskType","toUpperCase","deadline","concat","DevTasks","VerifiedTasks","TaskDone","deleteDone","ColumnTasksToDo","tasks","length","fontSize","visibility","deleteAll","pageNumbers1","display","renderPageNumbers1","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","tasksToDo","ColumnDev","devTasks","pageNumbers2","renderPageNumbers2","dev","ColumnVerify","verifyTasks","pageNumbers3","renderPageNumbers3","verify","ColumnDone","pageNumbers4","renderPageNumbers4","tasksDone","Board","filtertaskTasks","filtertaskDev","filtertaskVerify","filtertaskDone","_this$props","this","acceptRefuse","handleClickPage","handleAcceptRefuse","handleDelete","handlePush","currentPageDev","currentPageDone","currentPageTasks","currentPageVerify","task","indexOfLastTasks","indexOfFirstTasks","current1","Object","toConsumableArray","currentTasks","slice","indexOfLastDev","indexOfFirstDev","current2","currentDev","indexOfLastVerify","indexOfFirstVerify","current3","currentVerify","indexOfLastDone","indexOfFirstDone","current4","currentDone","i","Math","ceil","push","map","taskToDo","deadlineTask","key","acceptRefuseStatus","taskElements_devTasks","passedTime","verifiedTasks","taskDone","number","e","columnToDo","columnDev","columnVerify","columnDone","Component","App","state","backgroundColor","filterColor","AddActive","dateNow","fullDate","pageNumbers","_this","setState","target","currentTime","Date","year","getFullYear","month","getMonth","day","getDate","time","toLocaleString","hour","minute","hour12","array","_this$state","handleInput","defineProperty","handlePriority","handleEnter","handleAddTask","_this$state2","random","sort","sortToDoTasks","reverse","firstArray","secondArray","arrCopy","index","findIndex","_arrCopy$index","_this$state3","filterTask","data","property","sortOrder","substr","b","_this$state4","handleDeleteAll","_this$setState2","_this$setState3","handleSelect","handleFilterAll","blobs_blobs","inputArea_inputArea","filtering_filtering","board_board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7771dbd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/work-table.b88d4dfe.png\";","import React from \"react\";\nimport \"./blobs.scss\";\n\nconst Blobs = () => {\n  return (\n    <React.Fragment>\n      <div className=\"bgImage\" />\n      <svg className=\"blobCont\">\n        <image\n          xlinkHref=\"https://images.unsplash.com/photo-1500462918059-b1a0cb512f1d?ixlib=rb-0.3.5&s=e20bc3d490c974d9ea190e05c47962f5&auto=format&fit=crop&w=634&q=80\"\n          mask=\"url(#mask)\"\n          width=\"100%\"\n          height=\"100%\"\n          preserveAspectRatio=\"xMidYMid slice\"\n        />\n        <defs>\n          <filter id=\"gooey\" height=\"130%\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=\"15\"\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n              result=\"goo\"\n            />\n          </filter>\n        </defs>\n        <mask id=\"mask\" x=\"0\" y=\"0\">\n          <g style={{ filter: \"url(#gooey)\" }}>\n            <circle\n              className=\"blob\"\n              cx=\"10%\"\n              cy=\"10%\"\n              r=\"40\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"50%\"\n              cy=\"10%\"\n              r=\"20\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"17%\"\n              cy=\"15%\"\n              r=\"30\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"90%\"\n              cy=\"20%\"\n              r=\"50\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"30%\"\n              cy=\"25%\"\n              r=\"10\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"50%\"\n              cy=\"60%\"\n              r=\"40\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"70%\"\n              cy=\"90%\"\n              r=\"10\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"90%\"\n              cy=\"60%\"\n              r=\"20\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"30%\"\n              cy=\"90%\"\n              r=\"40\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"10%\"\n              cy=\"10%\"\n              r=\"20\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"50%\"\n              cy=\"10%\"\n              r=\"20\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"17%\"\n              cy=\"15%\"\n              r=\"30\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"40%\"\n              cy=\"20%\"\n              r=\"40\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"30%\"\n              cy=\"25%\"\n              r=\"30\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"80%\"\n              cy=\"60%\"\n              r=\"50\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"17%\"\n              cy=\"10%\"\n              r=\"50\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"40%\"\n              cy=\"60%\"\n              r=\"20\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"10%\"\n              cy=\"50%\"\n              r=\"30\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n          </g>\n        </mask>\n      </svg>\n    </React.Fragment>\n  );\n};\n\nexport default Blobs;\n","import React from \"react\";\nimport \"./inputArea.scss\";\nimport workTable from \"./work-table.png\";\n\nconst InputArea = props => {\n  return (\n    <div className=\"InputArea\">\n      <h2>Your Scrum Board</h2>\n      <div className=\"inputField\">\n        <label htmlFor=\"inp\" className=\"inp\">\n          <input\n            id=\"inp\"\n            type=\"text\"\n            name=\"draft\"\n            value={props.draft}\n            onChange={props.input}\n            maxLength=\"30\"\n            placeholder=\"&nbsp;\"\n            onKeyPress={props.enter}\n          />\n          <span className=\"label\">Input task</span>\n          <span className=\"border\" />\n        </label>\n\n        <div className=\"squaredCheckbox\">\n          <label htmlFor=\"checkb\">\n            <input\n              type=\"checkbox\"\n              id=\"checkb\"\n              checked={props.priority}\n              onChange={props.priorityStatus}\n            />\n            <label htmlFor=\"mark\" />\n            <i>High priority</i>\n          </label>\n        </div>\n\n        <div className=\"AddBtnContainer\">\n          <button\n            id=\"addBtn\"\n            className=\"btn btn-primary\"\n            onClick={props.addTask}\n          >\n            Add ✚\n          </button>\n          <p>\n            {props.addActive && props.draft === \"\"\n              ? `Fill task field firstly`\n              : null}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"selectBox\">\n        <label htmlFor=\"choice\">\n          <p>Task type: </p>\n          <select\n            style={props.color}\n            value={props.type}\n            onChange={props.select}\n            id=\"choice\"\n          >\n            <option value=\"review\">Review</option>\n            <option value=\"code\">Code</option>\n            <option value=\"test\">Test</option>\n            <option value=\"doc\">Document</option>\n            <option value=\"analyze\">Analyze</option>\n            <option value=\"fix\">Fix</option>\n            <option value=\"others\">Others</option>\n          </select>\n        </label>\n      </div>\n\n      <div className=\"deadlineDate\">\n        <label htmlFor=\"date\">\n          <p>Deadline date: </p>\n          <input\n            id=\"date\"\n            type=\"date\"\n            value={props.date}\n            min={props.minimumDate}\n            max={props.maximumDate}\n            onChange={props.handleDate}\n          />\n        </label>\n      </div>\n\n      <img src={workTable} alt=\"work-table\" />\n    </div>\n  );\n};\nexport default InputArea;\n","import React from \"react\";\nimport \"./filtering.scss\";\n\nconst Filtering = props => {\n  return (\n    <div className=\"filtering\">\n      <div className=\"selectBox\">\n        <label htmlFor=\"filter\">\n          <p>Filter by type: </p>\n          <select\n            value={props.filterType}\n            onChange={props.filterAll}\n            id=\"filter\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"review\">Review</option>\n            <option value=\"code\">Code</option>\n            <option value=\"test\">Test</option>\n            <option value=\"doc\">Document</option>\n            <option value=\"analyze\">Analyze</option>\n            <option value=\"fix\">Fix</option>\n            <option value=\"others\">Others</option>\n          </select>\n        </label>\n      </div>\n\n      <div className=\"selectBox\">\n        <label htmlFor=\"tasksPerPage\">\n          <p>Per Page: </p>\n          <select\n            value={props.tasksPerPage}\n            onChange={props.handleTasksPerPage}\n            id=\"tasksPerPage\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"6\">6</option>\n            <option value=\"9\">9</option>\n          </select>\n        </label>\n      </div>\n    </div>\n  );\n};\nexport default Filtering;\n","import React from \"react\";\n\nconst TaskToDo = props => {\n  return (\n    <div>\n      <div\n        className={props.priority ? \"singleTaskPriority\" : \"singleTask\"}\n        style={props.taskColor}\n      >\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n          <button className=\"btn btn-danger\" onClick={props.delete}>\n            ✘\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskToDo;\n","import React from \"react\";\n\nconst DevTasks = props => {\n  return (\n    <div>\n      <div\n        className={props.priority ? \"singleTaskPriority\" : \"singleTask\"}\n        style={props.taskColor}\n      >\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `passed: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default DevTasks;\n","import React from \"react\";\n\nconst VerifiedTasks = props => {\n  return (\n    <div>\n      <div\n        className={props.priority ? \"singleTaskPriority\" : \"singleTask\"}\n        style={props.taskColor}\n      >\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `passed: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default VerifiedTasks;\n","import React from \"react\";\n\nconst TaskDone = props => {\n  return (\n    <div>\n      <div\n        className={props.priority ? \"singleTaskPriority\" : \"singleTask\"}\n        style={props.taskColor}\n      >\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-danger\" onClick={props.deleteDone}>\n            ✘\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `done: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDone;\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\n\nconst ColumnTasksToDo = props => {\n  return (\n    <div className=\"col-xl-3\">\n      <div className=\"TasksToDoHeader\">\n        <h2 style={props.tasks.length === 30 ? { color: \"red\" } : null}>\n          To do ({props.tasks.length})<i style={{ fontSize: \"18px\" }}>/30 </i>\n        </h2>{\" \"}\n        <h6>\n          <i>(ordered by task type and priority in there)</i>\n        </h6>\n        <button\n          style={\n            props.tasks.length > 0\n              ? { visibility: \"visible\" }\n              : { visibility: \"hidden\" }\n          }\n          id=\"tasks\"\n          className=\"btn btn-danger\"\n          onClick={props.deleteAll}\n        >\n          Delete all\n        </button>\n        <div>\n          <b\n            id=\"page-numbers\"\n            style={\n              props.pageNumbers1.length < 2\n                ? { display: \"none\" }\n                : { display: \"block\" }\n            }\n          >\n            {props.renderPageNumbers1}\n          </b>\n        </div>\n        <h3\n          style={\n            props.tasks.length > 0\n              ? { display: \"none\" }\n              : { display: \"block\", color: \"red\" }\n          }\n        >\n          <i>None tasks to be done !</i>\n        </h3>\n      </div>\n      <div className=\"TasksToDoContainers\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {props.tasksToDo}\n        </ReactCSSTransitionGroup>\n      </div>\n    </div>\n  );\n};\nexport default ColumnTasksToDo;\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\n\nconst ColumnDev = props => {\n  return (\n    <div className=\"col-xl-3\">\n      <div className=\"TasksToDoHeader\">\n        <h2 style={props.devTasks.length === 30 ? { color: \"red\" } : null}>\n          Dev ({props.devTasks.length})<i style={{ fontSize: \"18px\" }}>/30 </i>\n        </h2>\n        <div>\n          <b\n            id=\"page-numbers\"\n            style={\n              props.pageNumbers2.length < 2\n                ? { display: \"none\" }\n                : { display: \"block\" }\n            }\n          >\n            {props.renderPageNumbers2}\n          </b>\n        </div>\n        <h3\n          style={\n            props.devTasks.length > 0\n              ? { display: \"none\" }\n              : { display: \"block\", color: \"red\" }\n          }\n        >\n          <i>None tasks to be developed !</i>\n        </h3>\n      </div>\n      <div className=\"TasksToDoContainers\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {props.dev}\n        </ReactCSSTransitionGroup>\n      </div>\n    </div>\n  );\n};\nexport default ColumnDev;\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\n\nconst ColumnVerify = props => {\n  return (\n    <div className=\"col-xl-3\">\n      <div className=\"TasksToDoHeader\">\n        <h2 style={props.verifyTasks.length === 30 ? { color: \"red\" } : null}>\n          Test ({props.verifyTasks.length})\n          <i style={{ fontSize: \"18px\" }}>/30 </i>\n        </h2>\n        <div>\n          <b\n            id=\"page-numbers\"\n            style={\n              props.pageNumbers3.length < 2\n                ? { display: \"none\" }\n                : { display: \"block\" }\n            }\n          >\n            {props.renderPageNumbers3}\n          </b>\n        </div>\n        <h3\n          style={\n            props.verifyTasks.length > 0\n              ? { display: \"none\" }\n              : { display: \"block\", color: \"red\" }\n          }\n        >\n          <i>None tasks to be verified !</i>\n        </h3>\n      </div>\n      <div className=\"TasksToDoContainers\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {props.verify}\n        </ReactCSSTransitionGroup>\n      </div>\n    </div>\n  );\n};\nexport default ColumnVerify;\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\n\nconst ColumnDone = props => {\n  return (\n    <div className=\"col-xl-3\">\n      <div className=\"TasksToDoHeader\">\n        <h2 style={props.done.length === 30 ? { color: \"red\" } : null}>\n          Done ({props.done.length})<i style={{ fontSize: \"18px\" }}>/30 </i>\n        </h2>\n        <button\n          style={\n            props.done.length > 0\n              ? { visibility: \"visible\" }\n              : { visibility: \"hidden\" }\n          }\n          id=\"done\"\n          className=\"btn btn-danger\"\n          onClick={props.deleteAll}\n        >\n          Delete all\n        </button>\n        <div>\n          <b\n            id=\"page-numbers\"\n            style={\n              props.pageNumbers4.length < 2\n                ? { display: \"none\" }\n                : { display: \"block\" }\n            }\n          >\n            {props.renderPageNumbers4}\n          </b>\n        </div>\n        <h3\n          style={\n            props.done.length > 0\n              ? { display: \"none\" }\n              : { display: \"block\", color: \"red\" }\n          }\n        >\n          <i>None task is done !</i>\n        </h3>\n      </div>\n      <div className=\"TasksToDoContainers\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {props.tasksDone}\n        </ReactCSSTransitionGroup>\n      </div>\n    </div>\n  );\n};\nexport default ColumnDone;\n","import React, { Component } from \"react\";\nimport TaskToDo from \"./taskElements/taskToDo\";\nimport DevTasks from \"./taskElements/devTasks\";\nimport VerifiedTasks from \"./taskElements/verifiedTasks\";\nimport TaskDone from \"./taskElements/taskDone\";\nimport ColumnTasksToDo from \"./taskList/columnToDo\";\nimport ColumnDev from \"./taskList/columnDev\";\nimport ColumnVerify from \"./taskList/columnVerify\";\nimport ColumnDone from \"./taskList/columnDone\";\nimport \"./board.scss\";\n\nclass Board extends Component {\n  render() {\n    const {\n      filterType,\n      tasks,\n      devTasks,\n      verifyTasks,\n      done,\n      acceptRefuse,\n      handleClickPage,\n      handleAcceptRefuse,\n      handleDelete,\n      handlePush,\n      currentPageDev,\n      currentPageDone,\n      currentPageTasks,\n      currentPageVerify,\n      tasksPerPage\n    } = this.props;\n\n    let filtertaskTasks;\n    let filtertaskDev;\n    let filtertaskVerify;\n    let filtertaskDone;\n\n    switch (filterType) {\n      case \"review\":\n        filtertaskTasks = tasks.filter(task => task.type === \"review\");\n        filtertaskDev = devTasks.filter(task => task.type === \"review\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"review\");\n        filtertaskDone = done.filter(task => task.type === \"review\");\n        break;\n      case \"code\":\n        filtertaskTasks = tasks.filter(task => task.type === \"code\");\n        filtertaskDev = devTasks.filter(task => task.type === \"code\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"code\");\n        filtertaskDone = done.filter(task => task.type === \"code\");\n        break;\n      case \"test\":\n        filtertaskTasks = tasks.filter(task => task.type === \"test\");\n        filtertaskDev = devTasks.filter(task => task.type === \"test\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"test\");\n        filtertaskDone = done.filter(task => task.type === \"test\");\n        break;\n      case \"doc\":\n        filtertaskTasks = tasks.filter(task => task.type === \"doc\");\n        filtertaskDev = devTasks.filter(task => task.type === \"doc\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"doc\");\n        filtertaskDone = done.filter(task => task.type === \"doc\");\n        break;\n      case \"analyze\":\n        filtertaskTasks = tasks.filter(task => task.type === \"analyze\");\n        filtertaskDev = devTasks.filter(task => task.type === \"analyze\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"analyze\");\n        filtertaskDone = done.filter(task => task.type === \"analyze\");\n        break;\n      case \"fix\":\n        filtertaskTasks = tasks.filter(task => task.type === \"fix\");\n        filtertaskDev = devTasks.filter(task => task.type === \"fix\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"fix\");\n        filtertaskDone = done.filter(task => task.type === \"fix\");\n        break;\n      case \"others\":\n        filtertaskTasks = tasks.filter(task => task.type === \"others\");\n        filtertaskDev = devTasks.filter(task => task.type === \"others\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"others\");\n        filtertaskDone = done.filter(task => task.type === \"others\");\n        break;\n      default:\n        filtertaskTasks = tasks.filter(task => task.type !== \"all\");\n        filtertaskDev = devTasks.filter(task => task.type !== \"all\");\n        filtertaskVerify = verifyTasks.filter(task => task.type !== \"all\");\n        filtertaskDone = done.filter(task => task.type !== \"all\");\n        break;\n    }\n\n    // Logic for displaying current tasks in pagination on each column\n    const indexOfLastTasks = currentPageTasks * tasksPerPage;\n    const indexOfFirstTasks = indexOfLastTasks - tasksPerPage;\n    let current1 = [...filtertaskTasks];\n    const currentTasks = current1.slice(indexOfFirstTasks, indexOfLastTasks);\n\n    const indexOfLastDev = currentPageDev * tasksPerPage;\n    const indexOfFirstDev = indexOfLastDev - tasksPerPage;\n    let current2 = [...filtertaskDev];\n    const currentDev = current2.slice(indexOfFirstDev, indexOfLastDev);\n\n    const indexOfLastVerify = currentPageVerify * tasksPerPage;\n    const indexOfFirstVerify = indexOfLastVerify - tasksPerPage;\n    let current3 = [...filtertaskVerify];\n    const currentVerify = current3.slice(indexOfFirstVerify, indexOfLastVerify);\n\n    const indexOfLastDone = currentPageDone * tasksPerPage;\n    const indexOfFirstDone = indexOfLastDone - tasksPerPage;\n    let current4 = [...filtertaskDone];\n    const currentDone = current4.slice(indexOfFirstDone, indexOfLastDone);\n\n    // Logic for displaying page numbers on each column\n    const pageNumbers1 = [];\n    for (let i = 1; i <= Math.ceil(current1.length / tasksPerPage); i++) {\n      pageNumbers1.push(i);\n    }\n\n    const pageNumbers2 = [];\n    for (let i = 1; i <= Math.ceil(current2.length / tasksPerPage); i++) {\n      pageNumbers2.push(i);\n    }\n\n    const pageNumbers3 = [];\n    for (let i = 1; i <= Math.ceil(current3.length / tasksPerPage); i++) {\n      pageNumbers3.push(i);\n    }\n\n    const pageNumbers4 = [];\n    for (let i = 1; i <= Math.ceil(current4.length / tasksPerPage); i++) {\n      pageNumbers4.push(i);\n    }\n\n    const tasksToDo = currentTasks.map(task => (\n      <TaskToDo\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        priority={task.priority}\n        key={task.id}\n        acceptRefuseStatus={acceptRefuse}\n        acceptRefuse={handleAcceptRefuse}\n        name={task.name}\n        delete={() => handleDelete(task.id, tasks)}\n        done={() => handlePush(task.id, tasks, devTasks)}\n      />\n    ));\n\n    const dev = currentDev.map(task => (\n      <DevTasks\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.passedTime}\n        priority={task.priority}\n        key={task.id}\n        name={task.name}\n        done={() => handlePush(task.id, devTasks, verifyTasks)}\n      />\n    ));\n\n    const verify = currentVerify.map(task => (\n      <VerifiedTasks\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.passedTime}\n        priority={task.priority}\n        key={task.id}\n        name={task.name}\n        done={() => handlePush(task.id, verifyTasks, done)}\n      />\n    ));\n\n    const tasksDone = currentDone.map(task => (\n      <TaskDone\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.passedTime}\n        priority={task.priority}\n        key={task.id}\n        name={task.name}\n        deleteDone={() => handleDelete(task.id, done)}\n      />\n    ));\n\n    const renderPageNumbers1 = pageNumbers1.map(number => {\n      return (\n        <button\n          className=\"paginat btn btn-info btn-sm\"\n          key={number}\n          id={number}\n          onClick={e => {\n            handleClickPage(e, tasks);\n          }}\n        >\n          {number}\n        </button>\n      );\n    });\n\n    const renderPageNumbers2 = pageNumbers2.map(number => {\n      return (\n        <button\n          className=\"paginat btn btn-info btn-sm\"\n          key={number}\n          id={number}\n          onClick={e => {\n            handleClickPage(e, devTasks);\n          }}\n        >\n          {number}\n        </button>\n      );\n    });\n\n    const renderPageNumbers3 = pageNumbers3.map(number => {\n      return (\n        <button\n          className=\"paginat btn btn-info btn-sm\"\n          key={number}\n          id={number}\n          onClick={e => {\n            handleClickPage(e, verifyTasks);\n          }}\n        >\n          {number}\n        </button>\n      );\n    });\n\n    const renderPageNumbers4 = pageNumbers4.map(number => {\n      return (\n        <button\n          className=\"paginat btn btn-info btn-sm\"\n          key={number}\n          id={number}\n          onClick={e => {\n            handleClickPage(e, done);\n          }}\n        >\n          {number}\n        </button>\n      );\n    });\n    return (\n      <div className=\"row\">\n        <ColumnTasksToDo\n          tasks={this.props.tasks}\n          pageNumbers1={pageNumbers1}\n          renderPageNumbers1={renderPageNumbers1}\n          tasksToDo={tasksToDo}\n          deleteAll={this.props.deleteAll}\n        />\n        <ColumnDev\n          devTasks={this.props.devTasks}\n          pageNumbers2={pageNumbers2}\n          renderPageNumbers2={renderPageNumbers2}\n          dev={dev}\n        />\n        <ColumnVerify\n          verifyTasks={this.props.verifyTasks}\n          pageNumbers3={pageNumbers3}\n          renderPageNumbers3={renderPageNumbers3}\n          verify={verify}\n        />\n        <ColumnDone\n          done={this.props.done}\n          pageNumbers4={pageNumbers4}\n          renderPageNumbers4={renderPageNumbers4}\n          tasksDone={tasksDone}\n          deleteAll={this.props.deleteAll}\n        />\n      </div>\n    );\n  }\n}\nexport default Board;\n","import React, { Component } from \"react\";\n\nimport Blobs from \"./components/blobs/blobs\";\nimport InputArea from \"./components/inputArea/inputArea\";\nimport Filtering from \"./components/filtering/filtering\";\nimport Board from \"./components/board/board\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  state = {\n    draft: \"\",\n    taskType: \"review\",\n    filterType: \"all\",\n    taskColor: { backgroundColor: \"#57A1C4\" },\n    filterColor: { backgroundColor: \"#FAA\" },\n    AddActive: false,\n    acceptRefuse: false,\n    priority: false,\n    dateNow: null,\n    date: \"\",\n    fullDate: null,\n    minimumDate: null,\n    maximumDate: null,\n    currentPageTasks: 1,\n    currentPageDev: 1,\n    currentPageVerify: 1,\n    currentPageDone: 1,\n    tasksPerPage: 3,\n    pageNumbers: [],\n    tasks: [\n      {\n        id: 1,\n        name: \"function to solve problem with ...\",\n        priority: true,\n        deadlineTask: \"2019-09-10\",\n        type: \"code\",\n        taskColor: { backgroundColor: \"#9370DB\" }\n      },\n      {\n        id: 2,\n        name: \"write report about ... issue\",\n        priority: false,\n        deadlineTask: \"2019-08-22\",\n        type: \"doc\",\n        taskColor: { backgroundColor: \"#92C1FF\" }\n      }\n    ],\n    devTasks: [],\n    verifyTasks: [],\n    done: [\n      {\n        id: 0,\n        name: \"display data from ...\",\n        priority: false,\n        deadlineTask: \"2019-08-22\",\n        passedTime: \"2019-06-22, 11:48 PM\",\n        type: \"code\",\n        taskColor: { backgroundColor: \"#9370DB\" }\n      }\n    ]\n  };\n\n  componentDidMount() {\n    this.currentTime();\n  }\n\n  handleDate = e => {\n    this.setState({\n      date: e.target.value\n    });\n  };\n\n  currentTime = () => {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n\n    const time = date.toLocaleString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true\n    });\n\n    if (month < 10) {\n      month = `0${month}`;\n    }\n\n    if (day < 10) {\n      day = `0${day}`;\n    }\n\n    this.setState({\n      dateNow: `${year}-${month}-${day}`,\n      date: `${year}-${month}-${day}`,\n      minimumDate: `${year}-${month}-${day}`,\n      maximumDate: `${year + 1}-${month}-${day}`,\n      fullDate: `${year}-${month}-${day}, ${time}`\n    });\n  };\n\n  handleClickPage = (e, array) => {\n    const { tasks, done, devTasks, verifyTasks } = this.state;\n\n    if (array === tasks) {\n      this.setState({\n        currentPageTasks: e.target.id\n      });\n    } else if (array === devTasks) {\n      this.setState({\n        currentPageDev: e.target.id\n      });\n    } else if (array === verifyTasks) {\n      this.setState({\n        currentPageVerify: e.target.id\n      });\n    } else if (array === done) {\n      this.setState({\n        currentPageDone: e.target.id\n      });\n    }\n  };\n\n  handleInput = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handlePriority = () => {\n    this.setState({\n      priority: !this.state.priority\n    });\n  };\n\n  handleAcceptRefuse = () => {\n    this.setState({\n      acceptRefuse: !this.state.acceptRefuse\n    });\n  };\n\n  handleEnter = e => {\n    if (e.key === \"Enter\") {\n      this.handleAddTask();\n    }\n  };\n\n  handleAddTask = () => {\n    const { draft, priority, date, taskType, taskColor } = this.state;\n    if (this.state.tasks.length < 30) {\n      const tasks = [\n        ...this.state.tasks,\n        {\n          id: Math.random() * this.state.tasks.length,\n          name: draft,\n          priority: priority,\n          deadlineTask: date,\n          type: taskType,\n          taskColor: taskColor\n        }\n      ]\n        .sort(this.sortToDoTasks(\"priority\"))\n        .sort(this.sortToDoTasks(\"type\"));\n\n      if (this.state.draft !== \"\") {\n        this.setState({\n          tasks: tasks.reverse(),\n          draft: \"\",\n          priority: false,\n          date: this.state.dateNow,\n          taskType: \"review\",\n          taskColor: { backgroundColor: \"#57A1C4\" },\n          AddActive: false\n        });\n      } else {\n        this.setState({\n          AddActive: true\n        });\n      }\n    }\n  };\n\n  handlePush = (id, firstArray, secondArray) => {\n    const arrCopy = [...firstArray];\n\n    const index = arrCopy.findIndex(task => task.id === id);\n    const { name, priority, deadlineTask, type, taskColor } = arrCopy[index];\n    const {\n      tasks,\n      devTasks,\n      verifyTasks,\n      done,\n      currentPageDev,\n      currentPageDone,\n      currentPageTasks,\n      currentPageVerify\n    } = this.state;\n\n    const filterTask = arrCopy.filter(task => task.id !== id);\n    const data = {\n      id: Math.random() * secondArray.length,\n      name: name,\n      priority: priority,\n      deadlineTask: deadlineTask,\n      passedTime: this.state.fullDate,\n      type: type,\n      taskColor: taskColor\n    };\n\n    if (firstArray === tasks && secondArray.length < 30) {\n      this.setState({\n        tasks: filterTask,\n        devTasks: [...secondArray, data]\n      });\n    } else if (firstArray === devTasks && secondArray.length < 30) {\n      this.setState({\n        devTasks: filterTask,\n        verifyTasks: [...secondArray, data]\n      });\n    } else if (firstArray === verifyTasks && secondArray.length < 30) {\n      this.setState({\n        verifyTasks: filterTask,\n        done: [...secondArray, data]\n      });\n    }\n\n    if (tasks.length === 4) {\n      this.setState({\n        currentPageTasks: 1\n      });\n    } else if (tasks.length % 3 === 1 && currentPageTasks > 1) {\n      this.setState({\n        currentPageTasks: currentPageTasks - 1\n      });\n    }\n\n    if (devTasks.length === 4) {\n      this.setState({\n        currentPageDev: 1\n      });\n    } else if (devTasks.length % 3 === 1 && currentPageDev > 1) {\n      this.setState({\n        currentPageDev: currentPageDev - 1\n      });\n    }\n\n    if (verifyTasks.length === 4) {\n      this.setState({\n        currentPageVerify: 1\n      });\n    } else if (verifyTasks.length % 3 === 1 && currentPageVerify > 1) {\n      this.setState({\n        currentPageVerify: currentPageVerify - 1\n      });\n    }\n\n    if (done.length === 4) {\n      this.setState({\n        currentPageDone: 1\n      });\n    } else if (done.length % 3 === 1 && currentPageDone > 1) {\n      this.setState({\n        currentPageDone: currentPageDone - 1\n      });\n    }\n  };\n\n  sortToDoTasks = property => {\n    let sortOrder = 1;\n    if (property[0] === \"-\") {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return (a, b) => {\n      let result =\n        a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n      return result * sortOrder;\n    };\n  };\n\n  handleDelete = (id, array) => {\n    const { tasks, currentPageTasks, currentPageDone, done } = this.state;\n\n    const arrCopy = [...array];\n    const filterTask = arrCopy.filter(task => task.id !== id);\n    if (array === tasks) {\n      this.setState({\n        tasks: filterTask\n      });\n    } else if (array === done) {\n      this.setState({\n        done: filterTask\n      });\n    }\n\n    if (tasks.length === 4) {\n      this.setState({\n        currentPageTasks: 1\n      });\n    } else if (tasks.length % 3 === 1 && currentPageTasks > 1) {\n      this.setState({\n        currentPageTasks: currentPageTasks - 1\n      });\n    }\n\n    if (done.length === 4) {\n      this.setState({\n        currentPageDone: 1\n      });\n    } else if (done.length % 3 === 1 && currentPageDone > 1) {\n      this.setState({\n        currentPageDone: currentPageDone - 1\n      });\n    }\n  };\n\n  handleDeleteAll = e => {\n    const id = e.target.id;\n    if (id === \"tasks\") {\n      this.setState({\n        [id]: [],\n        currentPageTasks: 1\n      });\n    } else if (id === \"done\") {\n      this.setState({\n        [id]: [],\n        currentPageDone: 1\n      });\n    }\n  };\n\n  handleSelect = e => {\n    this.setState({\n      taskType: e.target.value\n    });\n\n    switch (e.target.value) {\n      case \"review\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#57A1C4\" }\n        });\n      case \"code\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#9370DB\" }\n        });\n      case \"test\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#CBC8C8\" }\n        });\n      case \"doc\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#92C1FF\" }\n        });\n      case \"analyze\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#68D384\" }\n        });\n      case \"fix\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#E5AE3A\" }\n        });\n      case \"others\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#8F9A9F\" }\n        });\n      default:\n        return this.setState({\n          taskColor: { backgroundColor: \"black\" }\n        });\n    }\n  };\n\n  handleFilterAll = e => {\n    this.setState({\n      filterType: e.target.value,\n      currentPageTasks: 1,\n      currentPageDev: 1,\n      currentPageVerify: 1,\n      currentPageDone: 1\n    });\n  };\n\n  handleTasksPerPage = e => {\n    this.setState({\n      tasksPerPage: e.target.value,\n      currentPageTasks: 1,\n      currentPageDev: 1,\n      currentPageVerify: 1,\n      currentPageDone: 1\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Blobs />\n\n        <InputArea\n          input={this.handleInput}\n          enter={this.handleEnter}\n          draft={this.state.draft}\n          priority={this.state.priority}\n          priorityStatus={this.handlePriority}\n          addTask={this.handleAddTask}\n          addActive={this.state.AddActive}\n          color={this.state.taskColor}\n          type={this.state.taskType}\n          select={this.handleSelect}\n          date={this.state.date}\n          handleDate={this.handleDate}\n          minimumDate={this.state.minimumDate}\n          maximumDate={this.state.maximumDate}\n        />\n\n        <Filtering\n          filterType={this.state.filterType}\n          filterAll={this.handleFilterAll}\n          tasksPerPage={this.state.tasksPerPage}\n          handleTasksPerPage={this.handleTasksPerPage}\n        />\n\n        <hr />\n\n        <Board\n          currentPageDev={this.state.currentPageDev}\n          currentPageDone={this.state.currentPageDone}\n          currentPageTasks={this.state.currentPageTasks}\n          currentPageVerify={this.state.currentPageVerify}\n          tasksPerPage={this.state.tasksPerPage}\n          handleClickPage={this.handleClickPage}\n          tasks={this.state.tasks}\n          deleteAll={this.handleDeleteAll}\n          devTasks={this.state.devTasks}\n          verifyTasks={this.state.verifyTasks}\n          done={this.state.done}\n          filterType={this.state.filterType}\n          acceptRefuseStatus={this.state.acceptRefuse}\n          acceptRefuse={this.handleAcceptRefuse}\n          handlePush={this.handlePush}\n          handleDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}