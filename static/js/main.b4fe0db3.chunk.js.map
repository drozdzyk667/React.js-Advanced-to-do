{"version":3,"sources":["components/taskToDo.js","components/devTasks.js","components/verifiedTasks.js","components/taskDone.js","App.js","serviceWorker.js","index.js","work-table.png"],"names":["TaskToDo","props","react_default","a","createElement","className","style","taskColor","onClick","done","delete","taskType","priority","name","toUpperCase","deadline","concat","DevTasks","date","VerifiedTasks","TaskDone","deleteDone","App","state","draft","backgroundColor","AddActive","dateNow","fullDate","minimumDate","maximumDate","currentPage","tasksPerPage","pageNumbers","tasks","id","deadlineTask","type","devTasks","verifyTasks","doneAt","handleDate","e","_this","setState","target","value","currentTime","Date","year","getFullYear","month","getMonth","day","getDay","time","toLocaleString","hour","minute","hour12","handleClickPage","Number","handleInput","Object","defineProperty","handlePriority","handleEnter","key","handleAddTask","_this$state","length","toConsumableArray","Math","random","sort","sortToDoTasks","reverse","handlePush","firstArray","secondArray","index","findIndex","task","_tasks$index","filterTask","filter","data","passedTime","property","sortOrder","substr","b","handleDelete","array","handleDeleteAll","_this$setState2","handleSelect","this","_this2","_this$state2","indexOfLastTasks","indexOfFirstTasks","current","currentTasks","slice","i","ceil","push","renderPageNumbers","map","number","taskToDo","components_devTasks","verifiedTasks","tasksDone","taskDone","htmlFor","onChange","maxLength","placeholder","onKeyPress","checked","min","max","src","workTable","alt","margin","borderRight","color","fontSize","visibility","display","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.b4fe0db3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst TaskToDo = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"singleTask\" style={props.taskColor}>\r\n        <div className=\"control-buttons\">\r\n          <button className=\"btn btn-success\" onClick={props.done}>\r\n            ✔\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={props.delete}>\r\n            ✘\r\n          </button>\r\n        </div>\r\n        <p>\r\n          <i>{props.taskType}</i>\r\n        </p>\r\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\r\n          {props.priority ? props.name.toUpperCase() : props.name}\r\n          <br />\r\n        </h4>\r\n        <i>\r\n          {\" \"}\r\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\r\n        </i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskToDo;\r\n","import React from \"react\";\r\n\r\nconst DevTasks = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"singleTask\" style={props.taskColor}>\r\n        <div className=\"control-buttons\">\r\n          <button className=\"btn btn-success\" onClick={props.done}>\r\n            ✔\r\n          </button>\r\n        </div>\r\n        <p>\r\n          <i>{props.taskType}</i>\r\n        </p>\r\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\r\n          {props.priority ? props.name.toUpperCase() : props.name}\r\n          <br />\r\n        </h4>\r\n        <i> {props.date ? `passed: ${props.date}` : props.date}</i>\r\n        <i>\r\n          {\" \"}\r\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\r\n        </i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DevTasks;\r\n","import React from \"react\";\r\n\r\nconst VerifiedTasks = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"singleTask\" style={props.taskColor}>\r\n        <div className=\"control-buttons\">\r\n          <button className=\"btn btn-success\" onClick={props.done}>\r\n            ✔\r\n          </button>\r\n        </div>\r\n        <p>\r\n          <i>{props.taskType}</i>\r\n        </p>\r\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\r\n          {props.priority ? props.name.toUpperCase() : props.name}\r\n          <br />\r\n        </h4>\r\n        <i> {props.date ? `passed: ${props.date}` : props.date}</i>\r\n        <i>\r\n          {\" \"}\r\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\r\n        </i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifiedTasks;\r\n","import React from \"react\";\r\n\r\nconst TaskDone = props => {\r\n  return (\r\n    <div>\r\n      <div className=\"singleTask\" style={props.taskColor}>\r\n        <div className=\"control-buttons\">\r\n          <button className=\"btn btn-danger\" onClick={props.deleteDone}>\r\n            ✘\r\n          </button>\r\n        </div>\r\n        <p>\r\n          <i>{props.taskType}</i>\r\n        </p>\r\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\r\n          {props.priority ? props.name.toUpperCase() : props.name}\r\n          <br />\r\n        </h4>\r\n        <i> {props.date ? `done: ${props.date}` : props.date}</i>\r\n        <i>\r\n          {\" \"}\r\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\r\n        </i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskDone;\r\n","import React, { Component } from \"react\";\nimport TaskToDo from \"./components/taskToDo\";\nimport DevTasks from \"./components/devTasks\";\nimport VerifiedTasks from \"./components/verifiedTasks\";\nimport TaskDone from \"./components/taskDone\";\nimport \"./App.scss\";\nimport workTable from \"./work-table.png\";\n\nclass App extends Component {\n  state = {\n    draft: \"\",\n    taskType: \"review\",\n    taskColor: { backgroundColor: \"#57A1C4\" },\n    AddActive: false,\n    priority: false,\n    dateNow: null,\n    date: \"\",\n    fullDate: null,\n    minimumDate: null,\n    maximumDate: null,\n    currentPage: 1,\n    tasksPerPage: 3,\n    pageNumbers: [],\n    tasks: [\n      {\n        id: 1,\n        name: \"function to solve problem with ...\",\n        priority: true,\n        deadlineTask: \"2019-09-10\",\n        type: \"code\",\n        taskColor: { backgroundColor: \"#9370DB\" }\n      },\n      {\n        id: 2,\n        name: \"write report about ... issue\",\n        priority: false,\n        deadlineTask: \"2019-08-22\",\n        type: \"doc\",\n        taskColor: { backgroundColor: \"#92C1FF\" }\n      }\n    ],\n    devTasks: [],\n    verifyTasks: [],\n    done: [\n      {\n        id: 0,\n        name: \"display data from ...\",\n        priority: false,\n        deadlineTask: \"2019-08-22\",\n        doneAt: \"2019-06-22, 11:48 PM\",\n        type: \"code\",\n        taskColor: { backgroundColor: \"#9370DB\" }\n      }\n    ]\n  };\n\n  componentDidMount() {\n    this.currentTime();\n  }\n\n  handleDate = e => {\n    this.setState({\n      date: e.target.value\n    });\n  };\n\n  currentTime = () => {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDay();\n\n    const time = date.toLocaleString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true\n    });\n\n    if (month < 10) {\n      month = `0${month}`;\n    }\n\n    if (day < 10) {\n      day = `0${day}`;\n    }\n\n    this.setState({\n      dateNow: `${year}-${month}-${day}`,\n      date: `${year}-${month}-${day}`,\n      minimumDate: `${year}-${month}-${day}`,\n      maximumDate: `${year + 1}-${month}-${day}`,\n      fullDate: `${year}-${month}-${day}, ${time}`\n    });\n  };\n\n  handleClickPage = e => {\n    this.setState({\n      currentPage: Number(e.target.id)\n    });\n  };\n\n  handleInput = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handlePriority = () => {\n    this.setState({\n      priority: !this.state.priority\n    });\n  };\n\n  handleEnter = e => {\n    if (e.key === \"Enter\") {\n      this.handleAddTask();\n    }\n  };\n\n  handleAddTask = () => {\n    const { draft, priority, date, taskType, taskColor } = this.state;\n    if (this.state.tasks.length < 30) {\n      const tasks = [\n        ...this.state.tasks,\n        {\n          id: Math.random() * this.state.tasks.length,\n          name: draft,\n          priority: priority,\n          deadlineTask: date,\n          type: taskType,\n          taskColor: taskColor\n        }\n      ]\n        .sort(this.sortToDoTasks(\"priority\"))\n        .sort(this.sortToDoTasks(\"type\"));\n\n      if (this.state.draft !== \"\") {\n        this.setState({\n          tasks: tasks.reverse(),\n          draft: \"\",\n          priority: false,\n          date: this.state.dateNow,\n          taskType: \"review\",\n          taskColor: { backgroundColor: \"#57A1C4\" },\n          AddActive: false\n        });\n      } else {\n        this.setState({\n          AddActive: true\n        });\n      }\n    }\n  };\n\n  handlePush = (id, firstArray, secondArray) => {\n    const tasks = [...firstArray];\n\n    const index = tasks.findIndex(task => task.id === id);\n    const { name, priority, deadlineTask, type, taskColor } = tasks[index];\n\n    const filterTask = tasks.filter(task => task.id !== id);\n    const data = {\n      id: Math.random() * secondArray.length,\n      name: name,\n      priority: priority,\n      deadlineTask: deadlineTask,\n      passedTime: this.state.fullDate,\n      type: type,\n      taskColor: taskColor\n    };\n\n    if (firstArray === this.state.tasks) {\n      this.setState({\n        tasks: filterTask,\n        devTasks: [...secondArray, data]\n      });\n    } else if (firstArray === this.state.devTasks) {\n      this.setState({\n        devTasks: filterTask,\n        verifyTasks: [...secondArray, data]\n      });\n    } else if (firstArray === this.state.verifyTasks) {\n      this.setState({\n        verifyTasks: filterTask,\n        done: [...secondArray, data]\n      });\n    }\n  };\n\n  sortToDoTasks = property => {\n    let sortOrder = 1;\n    if (property[0] === \"-\") {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return (a, b) => {\n      let result =\n        a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n      return result * sortOrder;\n    };\n  };\n\n  handleDelete = (id, array) => {\n    const tasks = [...array];\n    const filterTask = tasks.filter(task => task.id !== id);\n    if (array === this.state.tasks) {\n      this.setState({\n        tasks: filterTask\n      });\n    } else if (array === this.state.done) {\n      this.setState({\n        done: filterTask\n      });\n    }\n\n    if (this.state.tasks.length === 4) {\n      this.setState({\n        currentPage: 1\n      });\n    } else if (\n      this.state.tasks.length % 3 === 1 &&\n      this.state.currentPage !== 1\n    ) {\n      this.setState({\n        currentPage: this.state.currentPage - 1\n      });\n    }\n  };\n\n  handleDeleteAll = e => {\n    const id = e.target.id;\n    if (id === \"tasks\") {\n      this.setState({\n        [id]: [],\n        currentPage: 1\n      });\n    } else if (id === \"done\") {\n      this.setState({\n        [id]: []\n      });\n    }\n  };\n\n  handleSelect = e => {\n    this.setState({\n      taskType: e.target.value\n    });\n\n    switch (e.target.value) {\n      case \"review\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#57A1C4\" }\n        });\n      case \"code\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#9370DB\" }\n        });\n      case \"test\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#CBC8C8\" }\n        });\n      case \"doc\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#92C1FF\" }\n        });\n      case \"analyse\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#68D384\" }\n        });\n      case \"ext\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#E5AE3A\" }\n        });\n      case \"others\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#8F9A9F\" }\n        });\n      default:\n        return this.setState({\n          taskColor: { backgroundColor: \"black\" }\n        });\n    }\n  };\n\n  render() {\n    const { currentPage, tasksPerPage } = this.state;\n\n    // Logic for displaying current tasks in pagination\n    const indexOfLastTasks = currentPage * tasksPerPage;\n    const indexOfFirstTasks = indexOfLastTasks - tasksPerPage;\n    let current = [...this.state.tasks];\n    const currentTasks = current.slice(indexOfFirstTasks, indexOfLastTasks);\n\n    // Logic for displaying page numbers\n    const pageNumbers = [];\n    for (let i = 1; i <= Math.ceil(current.length / tasksPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return (\n        <button\n          className=\"paginat btn btn-info btn-sm\"\n          key={number}\n          id={number}\n          onClick={this.handleClickPage}\n        >\n          {number}\n        </button>\n      );\n    });\n\n    const tasks = currentTasks.map(task => (\n      <TaskToDo\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        priority={task.priority}\n        key={task.id}\n        name={task.name}\n        delete={() => this.handleDelete(task.id, this.state.tasks)}\n        done={() =>\n          this.handlePush(task.id, this.state.tasks, this.state.devTasks)\n        }\n      />\n    ));\n\n    const devTasks = this.state.devTasks.map(task => (\n      <DevTasks\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.passedTime}\n        priority={task.priority}\n        doneAt={task.doneAt}\n        key={task.id}\n        name={task.name}\n        done={() =>\n          this.handlePush(task.id, this.state.devTasks, this.state.verifyTasks)\n        }\n      />\n    ));\n\n    const verifyTasks = this.state.verifyTasks.map(task => (\n      <VerifiedTasks\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.passedTime}\n        priority={task.priority}\n        doneAt={task.doneAt}\n        key={task.id}\n        name={task.name}\n        done={() =>\n          this.handlePush(task.id, this.state.verifyTasks, this.state.done)\n        }\n      />\n    ));\n\n    const tasksDone = this.state.done.map(task => (\n      <TaskDone\n        taskColor={task.taskColor}\n        taskType={task.type}\n        deadline={task.deadlineTask}\n        date={task.doneAt}\n        priority={task.priority}\n        doneAt={task.doneAt}\n        key={task.id}\n        name={task.name}\n        deleteDone={() => this.handleDelete(task.id, this.state.done)}\n      />\n    ));\n\n    return (\n      <div className=\"App\">\n        <div className=\"InputArea\">\n          <h2>Your Scrum Board</h2>\n          <div className=\"inputField\">\n            <label htmlFor=\"inp\" className=\"inp\">\n              <input\n                id=\"inp\"\n                type=\"text\"\n                name=\"draft\"\n                value={this.state.draft}\n                onChange={this.handleInput}\n                maxLength=\"30\"\n                placeholder=\"&nbsp;\"\n                onKeyPress={this.handleEnter}\n              />\n              <span className=\"label\">Input task</span>\n              <span className=\"border\" />\n            </label>\n\n            <div className=\"squaredCheckbox\">\n              <label htmlFor=\"checkb\">\n                <input\n                  type=\"checkbox\"\n                  id=\"checkb\"\n                  checked={this.state.priority}\n                  onChange={this.handlePriority}\n                />\n                <label htmlFor=\"mark\" />\n                <i>High priority</i>\n              </label>\n            </div>\n\n            <div className=\"AddBtnContainer\">\n              <button\n                id=\"addBtn\"\n                className=\"btn btn-primary\"\n                onClick={this.handleAddTask}\n              >\n                Add ✚\n              </button>\n              <p>\n                {this.state.AddActive && this.state.draft === \"\"\n                  ? `Fill task field firstly`\n                  : null}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"selectBox\">\n            <label htmlFor=\"choice\">\n              <p>Task type: </p>\n              <select\n                style={this.state.taskColor}\n                value={this.state.taskType}\n                onChange={this.handleSelect}\n                id=\"choice\"\n              >\n                <option value=\"review\">Review</option>\n                <option value=\"code\">Code</option>\n                <option value=\"test\">Test</option>\n                <option value=\"doc\">Document</option>\n                <option value=\"analyse\">Analyze</option>\n                <option value=\"ext\">Fix</option>\n                <option value=\"others\">Others</option>\n              </select>\n            </label>\n          </div>\n\n          <div className=\"deadlineDate\">\n            <label htmlFor=\"date\">\n              <p>Deadline date: </p>\n              <input\n                id=\"date\"\n                type=\"date\"\n                value={this.state.date}\n                min={this.state.minimumDate}\n                max={this.state.maximumDate}\n                onChange={this.handleDate}\n              />\n            </label>\n          </div>\n\n          <img src={workTable} alt=\"work-table\" />\n        </div>\n        <hr />\n\n        <div className=\"row\" style={{ margin: 0 }}>\n          <div className=\"col-xl-3\" style={{ borderRight: \"2px solid black\" }}>\n            <div className=\"TasksToDoHeader\">\n              <h2\n                style={this.state.tasks.length === 30 ? { color: \"red\" } : null}\n              >\n                To do ({this.state.tasks.length})\n                <i style={{ fontSize: \"18px\" }}>/30 </i>\n              </h2>{\" \"}\n              <h6>\n                <i>(ordered by task type and priority in there)</i>\n              </h6>\n              <button\n                style={\n                  this.state.tasks.length > 0\n                    ? { visibility: \"visible\" }\n                    : { visibility: \"hidden\" }\n                }\n                id=\"tasks\"\n                className=\"btn btn-danger\"\n                onClick={this.handleDeleteAll}\n              >\n                Delete all\n              </button>\n              <div>\n                <b\n                  id=\"page-numbers\"\n                  style={\n                    pageNumbers.length < 2\n                      ? { display: \"none\" }\n                      : { display: \"block\" }\n                  }\n                >\n                  {renderPageNumbers}\n                </b>\n              </div>\n              <h3\n                style={\n                  this.state.tasks.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None tasks to be done !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{tasks}</div>\n          </div>\n\n          <div className=\"col-xl-3\" style={{ borderRight: \"2px solid black\" }}>\n            <div className=\"TasksToDoHeader\">\n              <h2>Dev ({this.state.devTasks.length})</h2>{\" \"}\n              <h3\n                style={\n                  this.state.devTasks.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None tasks to be developed !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{devTasks}</div>\n          </div>\n\n          <div className=\"col-xl-3\" style={{ borderRight: \"2px solid black\" }}>\n            <div className=\"TasksToDoHeader\">\n              <h2>Test ({this.state.verifyTasks.length})</h2>{\" \"}\n              <h3\n                style={\n                  this.state.verifyTasks.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None tasks to be verified !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{verifyTasks}</div>\n          </div>\n\n          <div className=\"col-xl-3\">\n            <div className=\"TasksToDoHeader\">\n              <h2>Done ({this.state.done.length})</h2>{\" \"}\n              <button\n                style={\n                  this.state.done.length > 0\n                    ? { visibility: \"visible\" }\n                    : { visibility: \"hidden\" }\n                }\n                id=\"done\"\n                className=\"btn btn-danger\"\n                onClick={this.handleDeleteAll}\n              >\n                Delete all\n              </button>\n              <h3\n                style={\n                  this.state.done.length > 0\n                    ? { display: \"none\" }\n                    : { display: \"block\", color: \"red\" }\n                }\n              >\n                <i>None task is done !</i>\n              </h3>\n            </div>\n            <div className=\"TasksToDoContainers\">{tasksDone}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/work-table.b88d4dfe.png\";"],"sourceRoot":""}