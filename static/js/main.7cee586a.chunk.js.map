{"version":3,"sources":["components/inputArea/work-table.png","components/blobs/blobs.js","components/inputArea/inputArea.js","components/filtering/filtering.js","components/board/taskList/taskElements/taskToDo.js","components/board/taskList/columnToDo.js","components/board/taskList/taskElements/devTasks.js","components/board/taskList/columnDev.js","components/board/taskList/taskElements/verifiedTasks.js","components/board/taskList/columnVerify.js","components/board/taskList/taskElements/taskDone.js","components/board/taskList/columnDone.js","components/board/board.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Blobs","react_default","a","createElement","Fragment","className","xlinkHref","mask","width","height","preserveAspectRatio","id","in","stdDeviation","result","mode","values","x","y","style","filter","cx","cy","r","fill","stroke","InputArea","props","htmlFor","type","name","value","inputValue","onChange","maxLength","placeholder","onKeyPress","enter","checked","priority","priorityStatus","onClick","addTask","addActive","color","select","date","min","minimumDate","max","maximumDate","handleDate","src","workTable","alt","Filtering","filterType","filterAll","tasksPerPage","handleTasksPerPage","TaskToDo","taskColor","done","delete","taskType","toUpperCase","deadline","concat","ColumnTasksToDo","tasksToDo","currentTasks1","map","task","taskToDo","deadlineTask","key","acceptRefuseStatus","acceptRefuse","handleAcceptRefuse","handleDelete","tasks","handlePush","devTasks","renderPageNumbers","pageNumbers1","number","e","handleClickPage","length","fontSize","visibility","deleteAll","display","react_addons_css_transition_group_default","transitionName","transitionEnterTimeout","transitionLeaveTimeout","DevTasks","ColumnDev","dev","currentTasks2","taskElements_devTasks","passedTime","verifyTasks","pageNumbers2","VerifiedTasks","ColumnVerify","verify","currentTasks3","verifiedTasks","pageNumbers3","TaskDone","deleteDone","ColumnDone","tasksDone","currentTasks4","taskDone","pageNumbers4","Board","PaginationHandle","pageTasks","perPage","filterTasks","indexOfLastTasks","indexOfFirstTasks","Object","toConsumableArray","slice","NumberOfPages","array","i","Math","ceil","push","filtertaskTasks","filtertaskDev","filtertaskVerify","filtertaskDone","_this$props","this","currentPageDev","currentPageDone","currentPageTasks","currentPageVerify","columnToDo","columnDev","columnVerify","columnDone","Component","App","state","backgroundColor","filterColor","AddActive","MAX_LIST_ITEMS_COUNT","dateNow","fullDate","pageNumbers","_this","setState","target","currentTime","Date","year","getFullYear","month","getMonth","day","getDate","time","toLocaleString","hour","minute","hour12","toString","padStart","_this$state","handleInput","event","defineProperty","handlePriority","handleEnter","handleAddTask","_this$state2","random","sort","sortToDoTasks","reverse","firstArray","secondArray","arrCopy","index","findIndex","_arrCopy$index","_this$state3","filterTask","data","PaginationReturnPage","property","sortOrder","substr","b","_this$state4","handleDeleteAll","_this$setState2","_this$setState3","handleSelect","handleFilterAll","blobs_blobs","inputArea_inputArea","filtering_filtering","board_board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7cee586a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/work-table.b88d4dfe.png\";","import React from \"react\";\nimport \"./blobs.scss\";\n\nconst Blobs = () => {\n  return (\n    <React.Fragment>\n      <div className=\"bgImage\" />\n      <svg className=\"blobCont\">\n        <image\n          xlinkHref=\"https://images.unsplash.com/photo-1500462918059-b1a0cb512f1d?ixlib=rb-0.3.5&s=e20bc3d490c974d9ea190e05c47962f5&auto=format&fit=crop&w=634&q=80\"\n          mask=\"url(#mask)\"\n          width=\"100%\"\n          height=\"100%\"\n          preserveAspectRatio=\"xMidYMid slice\"\n        />\n        <defs>\n          <filter id=\"gooey\" height=\"130%\">\n            <feGaussianBlur\n              in=\"SourceGraphic\"\n              stdDeviation=\"15\"\n              result=\"blur\"\n            />\n            <feColorMatrix\n              in=\"blur\"\n              mode=\"matrix\"\n              values=\"1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -7\"\n              result=\"goo\"\n            />\n          </filter>\n        </defs>\n        <mask id=\"mask\" x=\"0\" y=\"0\">\n          <g style={{ filter: \"url(#gooey)\" }}>\n            <circle\n              className=\"blob\"\n              cx=\"10%\"\n              cy=\"10%\"\n              r=\"40\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"50%\"\n              cy=\"10%\"\n              r=\"20\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"17%\"\n              cy=\"15%\"\n              r=\"30\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"90%\"\n              cy=\"20%\"\n              r=\"50\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"30%\"\n              cy=\"25%\"\n              r=\"10\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"50%\"\n              cy=\"60%\"\n              r=\"40\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"70%\"\n              cy=\"90%\"\n              r=\"10\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"90%\"\n              cy=\"60%\"\n              r=\"20\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"30%\"\n              cy=\"90%\"\n              r=\"40\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"10%\"\n              cy=\"10%\"\n              r=\"20\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"50%\"\n              cy=\"10%\"\n              r=\"20\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"17%\"\n              cy=\"15%\"\n              r=\"30\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"40%\"\n              cy=\"20%\"\n              r=\"40\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"30%\"\n              cy=\"25%\"\n              r=\"30\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"80%\"\n              cy=\"60%\"\n              r=\"50\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"17%\"\n              cy=\"10%\"\n              r=\"50\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"40%\"\n              cy=\"60%\"\n              r=\"20\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n            <circle\n              className=\"blob\"\n              cx=\"10%\"\n              cy=\"50%\"\n              r=\"30\"\n              fill=\"white\"\n              stroke=\"white\"\n            />\n          </g>\n        </mask>\n      </svg>\n    </React.Fragment>\n  );\n};\n\nexport default Blobs;\n","import React from \"react\";\nimport \"./inputArea.scss\";\nimport workTable from \"./work-table.png\";\n\nconst InputArea = props => {\n  return (\n    <div className=\"InputArea\">\n      <h2>Your Scrum Board</h2>\n      <div className=\"inputField\">\n        <label htmlFor=\"inp\" className=\"inp\">\n          <input\n            id=\"inp\"\n            type=\"text\"\n            name=\"inputValue\"\n            value={props.inputValue}\n            onChange={props.onChange}\n            maxLength=\"30\"\n            placeholder=\"&nbsp;\"\n            onKeyPress={props.enter}\n          />\n          <span className=\"label\">Input task</span>\n          <span className=\"border\" />\n        </label>\n\n        <div className=\"squaredCheckbox\">\n          <label htmlFor=\"checkb\">\n            <input\n              type=\"checkbox\"\n              id=\"checkb\"\n              checked={props.priority}\n              onChange={props.priorityStatus}\n            />\n            <label htmlFor=\"mark\" />\n            <i>High priority</i>\n          </label>\n        </div>\n\n        <div className=\"AddBtnContainer\">\n          <button\n            id=\"addBtn\"\n            className=\"btn btn-primary\"\n            onClick={props.addTask}\n          >\n            Add ✚\n          </button>\n          <p>\n            {props.addActive && props.inputValue === \"\"\n              ? `Fill task field firstly`\n              : null}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"selectBox\">\n        <label htmlFor=\"choice\">\n          <p>Task type: </p>\n          <select\n            style={props.color}\n            value={props.type}\n            onChange={props.select}\n            id=\"choice\"\n          >\n            <option value=\"review\">Review</option>\n            <option value=\"code\">Code</option>\n            <option value=\"test\">Test</option>\n            <option value=\"doc\">Document</option>\n            <option value=\"analyze\">Analyze</option>\n            <option value=\"fix\">Fix</option>\n            <option value=\"others\">Others</option>\n          </select>\n        </label>\n      </div>\n\n      <div className=\"deadlineDate\">\n        <label htmlFor=\"date\">\n          <p>Deadline date: </p>\n          <input\n            id=\"date\"\n            type=\"date\"\n            value={props.date}\n            min={props.minimumDate}\n            max={props.maximumDate}\n            onChange={props.handleDate}\n          />\n        </label>\n      </div>\n\n      <img src={workTable} alt=\"work-table\" />\n    </div>\n  );\n};\nexport default InputArea;\n","import React from \"react\";\nimport \"./filtering.scss\";\n\nconst Filtering = props => {\n  return (\n    <div className=\"filtering\">\n      <div className=\"selectBox\">\n        <label htmlFor=\"filter\">\n          <p>Filter by type: </p>\n          <select\n            value={props.filterType}\n            onChange={props.filterAll}\n            id=\"filter\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"review\">Review</option>\n            <option value=\"code\">Code</option>\n            <option value=\"test\">Test</option>\n            <option value=\"doc\">Document</option>\n            <option value=\"analyze\">Analyze</option>\n            <option value=\"fix\">Fix</option>\n            <option value=\"others\">Others</option>\n          </select>\n        </label>\n      </div>\n\n      <div className=\"selectBox\">\n        <label htmlFor=\"tasksPerPage\">\n          <p>Per Page: </p>\n          <select\n            value={props.tasksPerPage}\n            onChange={props.handleTasksPerPage}\n            id=\"tasksPerPage\"\n          >\n            <option value=\"3\">3</option>\n            <option value=\"6\">6</option>\n            <option value=\"9\">9</option>\n          </select>\n        </label>\n      </div>\n    </div>\n  );\n};\nexport default Filtering;\n","import React from \"react\";\n\nconst TaskToDo = props => {\n  return (\n    <div>\n      <div\n        className={props.priority ? \"singleTaskPriority\" : \"singleTask\"}\n        style={props.taskColor}\n      >\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n          <button className=\"btn btn-danger\" onClick={props.delete}>\n            ✘\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskToDo;\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport TaskToDo from \"./taskElements/taskToDo\";\n\nconst ColumnTasksToDo = props => {\n  const tasksToDo = props.currentTasks1.map(task => (\n    <TaskToDo\n      taskColor={task.taskColor}\n      taskType={task.type}\n      deadline={task.deadlineTask}\n      priority={task.priority}\n      key={task.id}\n      acceptRefuseStatus={props.acceptRefuse}\n      acceptRefuse={props.handleAcceptRefuse}\n      name={task.name}\n      delete={() => props.handleDelete(task.id, props.tasks)}\n      done={() => props.handlePush(task.id, props.tasks, props.devTasks)}\n    />\n  ));\n\n  const renderPageNumbers = props.pageNumbers1.map(number => {\n    return (\n      <button\n        className=\"paginat btn btn-info btn-sm\"\n        key={number}\n        id={number}\n        onClick={e => {\n          props.handleClickPage(e, props.tasks);\n        }}\n      >\n        {number}\n      </button>\n    );\n  });\n\n  return (\n    <div className=\"col-xl-3\">\n      <div className=\"TasksToDoHeader\">\n        <h2 style={props.tasks.length === 30 ? { color: \"red\" } : null}>\n          To do ({props.tasks.length})<i style={{ fontSize: \"18px\" }}>/30 </i>\n        </h2>{\" \"}\n        <h6>\n          <i>(ordered by task type and priority in there)</i>\n        </h6>\n        <button\n          style={\n            props.tasks.length > 0\n              ? { visibility: \"visible\" }\n              : { visibility: \"hidden\" }\n          }\n          id=\"tasks\"\n          className=\"btn btn-danger\"\n          onClick={props.deleteAll}\n        >\n          Delete all\n        </button>\n        <div>\n          <b\n            id=\"page-numbers\"\n            style={\n              props.pageNumbers1.length < 2\n                ? { display: \"none\" }\n                : { display: \"block\" }\n            }\n          >\n            {renderPageNumbers}\n          </b>\n        </div>\n        <h3\n          style={\n            props.tasks.length > 0\n              ? { display: \"none\" }\n              : { display: \"block\", color: \"red\" }\n          }\n        >\n          <i>None tasks to be done !</i>\n        </h3>\n      </div>\n      <div className=\"TasksToDoContainers\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {tasksToDo}\n        </ReactCSSTransitionGroup>\n      </div>\n    </div>\n  );\n};\nexport default ColumnTasksToDo;\n","import React from \"react\";\n\nconst DevTasks = props => {\n  return (\n    <div>\n      <div\n        className={props.priority ? \"singleTaskPriority\" : \"singleTask\"}\n        style={props.taskColor}\n      >\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `passed: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default DevTasks;\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\n\nimport DevTasks from \"./taskElements/devTasks\";\n\nconst ColumnDev = props => {\n  const dev = props.currentTasks2.map(task => (\n    <DevTasks\n      taskColor={task.taskColor}\n      taskType={task.type}\n      deadline={task.deadlineTask}\n      date={task.passedTime}\n      priority={task.priority}\n      key={task.id}\n      name={task.name}\n      done={() => props.handlePush(task.id, props.devTasks, props.verifyTasks)}\n    />\n  ));\n\n  const renderPageNumbers = props.pageNumbers2.map(number => {\n    return (\n      <button\n        className=\"paginat btn btn-info btn-sm\"\n        key={number}\n        id={number}\n        onClick={e => {\n          props.handleClickPage(e, props.devTasks);\n        }}\n      >\n        {number}\n      </button>\n    );\n  });\n  return (\n    <div className=\"col-xl-3\">\n      <div className=\"TasksToDoHeader\">\n        <h2 style={props.devTasks.length === 30 ? { color: \"red\" } : null}>\n          Dev ({props.devTasks.length})<i style={{ fontSize: \"18px\" }}>/30 </i>\n        </h2>\n        <div>\n          <b\n            id=\"page-numbers\"\n            style={\n              props.pageNumbers2.length < 2\n                ? { display: \"none\" }\n                : { display: \"block\" }\n            }\n          >\n            {renderPageNumbers}\n          </b>\n        </div>\n        <h3\n          style={\n            props.devTasks.length > 0\n              ? { display: \"none\" }\n              : { display: \"block\", color: \"red\" }\n          }\n        >\n          <i>None tasks to be developed !</i>\n        </h3>\n      </div>\n      <div className=\"TasksToDoContainers\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {dev}\n        </ReactCSSTransitionGroup>\n      </div>\n    </div>\n  );\n};\nexport default ColumnDev;\n","import React from \"react\";\n\nconst VerifiedTasks = props => {\n  return (\n    <div>\n      <div\n        className={props.priority ? \"singleTaskPriority\" : \"singleTask\"}\n        style={props.taskColor}\n      >\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-success\" onClick={props.done}>\n            ✔\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `passed: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default VerifiedTasks;\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport VerifiedTasks from \"./taskElements/verifiedTasks\";\n\nconst ColumnVerify = props => {\n  const verify = props.currentTasks3.map(task => (\n    <VerifiedTasks\n      taskColor={task.taskColor}\n      taskType={task.type}\n      deadline={task.deadlineTask}\n      date={task.passedTime}\n      priority={task.priority}\n      key={task.id}\n      name={task.name}\n      done={() => props.handlePush(task.id, props.verifyTasks, props.done)}\n    />\n  ));\n\n  const renderPageNumbers = props.pageNumbers3.map(number => {\n    return (\n      <button\n        className=\"paginat btn btn-info btn-sm\"\n        key={number}\n        id={number}\n        onClick={e => {\n          props.handleClickPage(e, props.verifyTasks);\n        }}\n      >\n        {number}\n      </button>\n    );\n  });\n  return (\n    <div className=\"col-xl-3\">\n      <div className=\"TasksToDoHeader\">\n        <h2 style={props.verifyTasks.length === 30 ? { color: \"red\" } : null}>\n          Test ({props.verifyTasks.length})\n          <i style={{ fontSize: \"18px\" }}>/30 </i>\n        </h2>\n        <div>\n          <b\n            id=\"page-numbers\"\n            style={\n              props.pageNumbers3.length < 2\n                ? { display: \"none\" }\n                : { display: \"block\" }\n            }\n          >\n            {renderPageNumbers}\n          </b>\n        </div>\n        <h3\n          style={\n            props.verifyTasks.length > 0\n              ? { display: \"none\" }\n              : { display: \"block\", color: \"red\" }\n          }\n        >\n          <i>None tasks to be verified !</i>\n        </h3>\n      </div>\n      <div className=\"TasksToDoContainers\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {verify}\n        </ReactCSSTransitionGroup>\n      </div>\n    </div>\n  );\n};\nexport default ColumnVerify;\n","import React from \"react\";\n\nconst TaskDone = props => {\n  return (\n    <div>\n      <div\n        className={props.priority ? \"singleTaskPriority\" : \"singleTask\"}\n        style={props.taskColor}\n      >\n        <div className=\"control-buttons\">\n          <button className=\"btn btn-danger\" onClick={props.deleteDone}>\n            ✘\n          </button>\n        </div>\n        <p>\n          <i>{props.taskType}</i>\n        </p>\n        <h4 className={props.priority ? \"priority\" : \"standard\"}>\n          {props.priority ? props.name.toUpperCase() : props.name}\n          <br />\n        </h4>\n        <i> {props.date ? `done: ${props.date}` : props.date}</i>\n        <i>\n          {\" \"}\n          {props.deadline ? `deadline: ${props.deadline}` : props.deadline}\n        </i>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDone;\n","import React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport TaskDone from \"./taskElements/taskDone\";\n\nconst ColumnDone = props => {\n  const tasksDone = props.currentTasks4.map(task => (\n    <TaskDone\n      taskColor={task.taskColor}\n      taskType={task.type}\n      deadline={task.deadlineTask}\n      date={task.passedTime}\n      priority={task.priority}\n      key={task.id}\n      name={task.name}\n      deleteDone={() => props.handleDelete(task.id, props.done)}\n    />\n  ));\n\n  const renderPageNumbers = props.pageNumbers4.map(number => {\n    return (\n      <button\n        className=\"paginat btn btn-info btn-sm\"\n        key={number}\n        id={number}\n        onClick={e => {\n          props.handleClickPage(e, props.done);\n        }}\n      >\n        {number}\n      </button>\n    );\n  });\n  return (\n    <div className=\"col-xl-3\">\n      <div className=\"TasksToDoHeader\">\n        <h2 style={props.done.length === 30 ? { color: \"red\" } : null}>\n          Done ({props.done.length})<i style={{ fontSize: \"18px\" }}>/30 </i>\n        </h2>\n        <button\n          style={\n            props.done.length > 0\n              ? { visibility: \"visible\" }\n              : { visibility: \"hidden\" }\n          }\n          id=\"done\"\n          className=\"btn btn-danger\"\n          onClick={props.deleteAll}\n        >\n          Delete all\n        </button>\n        <div>\n          <b\n            id=\"page-numbers\"\n            style={\n              props.pageNumbers4.length < 2\n                ? { display: \"none\" }\n                : { display: \"block\" }\n            }\n          >\n            {renderPageNumbers}\n          </b>\n        </div>\n        <h3\n          style={\n            props.done.length > 0\n              ? { display: \"none\" }\n              : { display: \"block\", color: \"red\" }\n          }\n        >\n          <i>None task is done !</i>\n        </h3>\n      </div>\n      <div className=\"TasksToDoContainers\">\n        <ReactCSSTransitionGroup\n          transitionName=\"fade\"\n          transitionEnterTimeout={300}\n          transitionLeaveTimeout={300}\n        >\n          {tasksDone}\n        </ReactCSSTransitionGroup>\n      </div>\n    </div>\n  );\n};\nexport default ColumnDone;\n","import React, { Component } from \"react\";\nimport ColumnTasksToDo from \"./taskList/columnToDo\";\nimport ColumnDev from \"./taskList/columnDev\";\nimport ColumnVerify from \"./taskList/columnVerify\";\nimport ColumnDone from \"./taskList/columnDone\";\nimport \"./board.scss\";\n\nclass Board extends Component {\n  // Logic for displaying current tasks in pagination on each column\n  PaginationHandle = (pageTasks, perPage, filterTasks) => {\n    const indexOfLastTasks = pageTasks * perPage;\n    const indexOfFirstTasks = indexOfLastTasks - perPage;\n    let current1 = [...filterTasks];\n    return current1.slice(indexOfFirstTasks, indexOfLastTasks);\n  };\n\n  // Logic for displaying page numbers on each column\n  NumberOfPages = (filterTasks, perPage, array) => {\n    for (let i = 1; i <= Math.ceil([...filterTasks].length / perPage); i++) {\n      array.push(i);\n    }\n  };\n\n  render() {\n    const {\n      filterType,\n      tasks,\n      devTasks,\n      verifyTasks,\n      done,\n      acceptRefuse,\n      handleClickPage,\n      handleAcceptRefuse,\n      handleDelete,\n      handlePush,\n      currentPageDev,\n      currentPageDone,\n      currentPageTasks,\n      currentPageVerify,\n      tasksPerPage\n    } = this.props;\n\n    let filtertaskTasks;\n    let filtertaskDev;\n    let filtertaskVerify;\n    let filtertaskDone;\n\n    const pageNumbers1 = [];\n    const pageNumbers2 = [];\n    const pageNumbers3 = [];\n    const pageNumbers4 = [];\n\n    switch (filterType) {\n      case \"review\":\n        filtertaskTasks = tasks.filter(task => task.type === \"review\");\n        filtertaskDev = devTasks.filter(task => task.type === \"review\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"review\");\n        filtertaskDone = done.filter(task => task.type === \"review\");\n        break;\n      case \"code\":\n        filtertaskTasks = tasks.filter(task => task.type === \"code\");\n        filtertaskDev = devTasks.filter(task => task.type === \"code\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"code\");\n        filtertaskDone = done.filter(task => task.type === \"code\");\n        break;\n      case \"test\":\n        filtertaskTasks = tasks.filter(task => task.type === \"test\");\n        filtertaskDev = devTasks.filter(task => task.type === \"test\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"test\");\n        filtertaskDone = done.filter(task => task.type === \"test\");\n        break;\n      case \"doc\":\n        filtertaskTasks = tasks.filter(task => task.type === \"doc\");\n        filtertaskDev = devTasks.filter(task => task.type === \"doc\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"doc\");\n        filtertaskDone = done.filter(task => task.type === \"doc\");\n        break;\n      case \"analyze\":\n        filtertaskTasks = tasks.filter(task => task.type === \"analyze\");\n        filtertaskDev = devTasks.filter(task => task.type === \"analyze\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"analyze\");\n        filtertaskDone = done.filter(task => task.type === \"analyze\");\n        break;\n      case \"fix\":\n        filtertaskTasks = tasks.filter(task => task.type === \"fix\");\n        filtertaskDev = devTasks.filter(task => task.type === \"fix\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"fix\");\n        filtertaskDone = done.filter(task => task.type === \"fix\");\n        break;\n      case \"others\":\n        filtertaskTasks = tasks.filter(task => task.type === \"others\");\n        filtertaskDev = devTasks.filter(task => task.type === \"others\");\n        filtertaskVerify = verifyTasks.filter(task => task.type === \"others\");\n        filtertaskDone = done.filter(task => task.type === \"others\");\n        break;\n      default:\n        filtertaskTasks = tasks.filter(task => task.type !== \"all\");\n        filtertaskDev = devTasks.filter(task => task.type !== \"all\");\n        filtertaskVerify = verifyTasks.filter(task => task.type !== \"all\");\n        filtertaskDone = done.filter(task => task.type !== \"all\");\n        break;\n    }\n\n    const currentTasks1 = this.PaginationHandle(\n      currentPageTasks,\n      tasksPerPage,\n      filtertaskTasks\n    );\n    const currentTasks2 = this.PaginationHandle(\n      currentPageDev,\n      tasksPerPage,\n      filtertaskDev\n    );\n    const currentTasks3 = this.PaginationHandle(\n      currentPageVerify,\n      tasksPerPage,\n      filtertaskVerify\n    );\n    const currentTasks4 = this.PaginationHandle(\n      currentPageDone,\n      tasksPerPage,\n      filtertaskDone\n    );\n\n    this.NumberOfPages(filtertaskTasks, tasksPerPage, pageNumbers1);\n    this.NumberOfPages(filtertaskDev, tasksPerPage, pageNumbers2);\n    this.NumberOfPages(filtertaskVerify, tasksPerPage, pageNumbers3);\n    this.NumberOfPages(filtertaskDone, tasksPerPage, pageNumbers4);\n\n    return (\n      <div className=\"row\">\n        <ColumnTasksToDo\n          tasks={this.props.tasks}\n          pageNumbers1={pageNumbers1}\n          currentTasks1={currentTasks1}\n          deleteAll={this.props.deleteAll}\n          acceptRefuseStatus={acceptRefuse}\n          acceptRefuse={handleAcceptRefuse}\n          handleDelete={handleDelete}\n          handlePush={handlePush}\n          devTasks={this.props.devTasks}\n          handleClickPage={handleClickPage}\n        />\n        <ColumnDev\n          devTasks={this.props.devTasks}\n          pageNumbers2={pageNumbers2}\n          handleClickPage={handleClickPage}\n          currentTasks2={currentTasks2}\n          handlePush={handlePush}\n          verifyTasks={this.props.verifyTasks}\n        />\n        <ColumnVerify\n          verifyTasks={this.props.verifyTasks}\n          pageNumbers3={pageNumbers3}\n          currentTasks3={currentTasks3}\n          done={this.props.done}\n          handlePush={handlePush}\n          handleClickPage={handleClickPage}\n        />\n        <ColumnDone\n          done={this.props.done}\n          pageNumbers4={pageNumbers4}\n          currentTasks4={currentTasks4}\n          deleteAll={this.props.deleteAll}\n          handleClickPage={handleClickPage}\n          handleDelete={handleDelete}\n        />\n      </div>\n    );\n  }\n}\nexport default Board;\n","import React, { Component } from \"react\";\n\nimport Blobs from \"./components/blobs/blobs\";\nimport InputArea from \"./components/inputArea/inputArea\";\nimport Filtering from \"./components/filtering/filtering\";\nimport Board from \"./components/board/board\";\nimport \"./App.scss\";\n\nclass App extends Component {\n  state = {\n    inputValue: \"\",\n    taskType: \"review\",\n    filterType: \"all\",\n    taskColor: { backgroundColor: \"#57A1C4\" },\n    filterColor: { backgroundColor: \"#FAA\" },\n    AddActive: false,\n    acceptRefuse: false,\n    priority: false,\n    MAX_LIST_ITEMS_COUNT: 30,\n    dateNow: null,\n    date: \"\",\n    fullDate: null,\n    minimumDate: null,\n    maximumDate: null,\n    currentPageTasks: 1,\n    currentPageDev: 1,\n    currentPageVerify: 1,\n    currentPageDone: 1,\n    tasksPerPage: 3,\n    pageNumbers: [],\n    tasks: [\n      {\n        id: 1,\n        name: \"function to solve problem with ...\",\n        priority: true,\n        deadlineTask: \"2019-09-10\",\n        type: \"code\",\n        taskColor: { backgroundColor: \"#9370DB\" }\n      },\n      {\n        id: 2,\n        name: \"write report about ... issue\",\n        priority: false,\n        deadlineTask: \"2019-08-22\",\n        type: \"doc\",\n        taskColor: { backgroundColor: \"#92C1FF\" }\n      }\n    ],\n    devTasks: [],\n    verifyTasks: [],\n    done: [\n      {\n        id: 0,\n        name: \"display data from ...\",\n        priority: false,\n        deadlineTask: \"2019-08-22\",\n        passedTime: \"2019-06-22, 11:48 PM\",\n        type: \"code\",\n        taskColor: { backgroundColor: \"#9370DB\" }\n      }\n    ]\n  };\n\n  componentDidMount() {\n    this.currentTime();\n  }\n\n  handleDate = e => {\n    this.setState({\n      date: e.target.value\n    });\n  };\n\n  currentTime = () => {\n    const date = new Date();\n    const year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n\n    const time = date.toLocaleString(\"en-US\", {\n      hour: \"numeric\",\n      minute: \"numeric\",\n      hour12: true\n    });\n\n    if (month < 10) {\n      month = month.toString().padStart(2, 0);\n    }\n\n    if (day < 10) {\n      day = day.toString().padStart(2, 0);\n    }\n\n    this.setState({\n      dateNow: `${year}-${month}-${day}`,\n      date: `${year}-${month}-${day}`,\n      minimumDate: `${year}-${month}-${day}`,\n      maximumDate: `${year + 1}-${month}-${day}`,\n      fullDate: `${year}-${month}-${day}, ${time}`\n    });\n  };\n\n  handleClickPage = (e, array) => {\n    const { tasks, done, devTasks, verifyTasks } = this.state;\n\n    if (array === tasks) {\n      this.setState({\n        currentPageTasks: e.target.id\n      });\n    } else if (array === devTasks) {\n      this.setState({\n        currentPageDev: e.target.id\n      });\n    } else if (array === verifyTasks) {\n      this.setState({\n        currentPageVerify: e.target.id\n      });\n    } else if (array === done) {\n      this.setState({\n        currentPageDone: e.target.id\n      });\n    }\n  };\n\n  handleInput = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  handlePriority = () => {\n    this.setState({\n      priority: !this.state.priority\n    });\n  };\n\n  handleAcceptRefuse = () => {\n    this.setState({\n      acceptRefuse: !this.state.acceptRefuse\n    });\n  };\n\n  handleEnter = event => {\n    if (event.key === \"Enter\") {\n      this.handleAddTask();\n    }\n  };\n\n  handleAddTask = () => {\n    const {\n      inputValue,\n      MAX_LIST_ITEMS_COUNT,\n      priority,\n      date,\n      taskType,\n      taskColor\n    } = this.state;\n    if (this.state.tasks.length < MAX_LIST_ITEMS_COUNT) {\n      const tasks = [\n        ...this.state.tasks,\n        {\n          id: Math.random() * this.state.tasks.length,\n          name: inputValue,\n          priority: priority,\n          deadlineTask: date,\n          type: taskType,\n          taskColor: taskColor\n        }\n      ]\n        .sort(this.sortToDoTasks(\"priority\"))\n        .sort(this.sortToDoTasks(\"type\"));\n\n      if (this.state.inputValue !== \"\") {\n        this.setState({\n          tasks: tasks.reverse(),\n          inputValue: \"\",\n          priority: false,\n          date: this.state.dateNow,\n          taskType: \"review\",\n          taskColor: { backgroundColor: \"#57A1C4\" },\n          AddActive: false\n        });\n      } else {\n        this.setState({\n          AddActive: true\n        });\n      }\n    }\n  };\n\n  handlePush = (id, firstArray, secondArray) => {\n    const arrCopy = [...firstArray];\n\n    const index = arrCopy.findIndex(task => task.id === id);\n    const { name, priority, deadlineTask, type, taskColor } = arrCopy[index];\n    const {\n      tasks,\n      devTasks,\n      verifyTasks,\n      done,\n      currentPageDev,\n      currentPageDone,\n      currentPageTasks,\n      currentPageVerify,\n      MAX_LIST_ITEMS_COUNT\n    } = this.state;\n\n    const filterTask = arrCopy.filter(task => task.id !== id);\n    const data = {\n      id: Math.random() * secondArray.length,\n      name: name,\n      priority: priority,\n      deadlineTask: deadlineTask,\n      passedTime: this.state.fullDate,\n      type: type,\n      taskColor: taskColor\n    };\n\n    if (firstArray === tasks && secondArray.length < MAX_LIST_ITEMS_COUNT) {\n      this.setState({\n        tasks: filterTask,\n        devTasks: [...secondArray, data]\n      });\n    } else if (\n      firstArray === devTasks &&\n      secondArray.length < MAX_LIST_ITEMS_COUNT\n    ) {\n      this.setState({\n        devTasks: filterTask,\n        verifyTasks: [...secondArray, data]\n      });\n    } else if (\n      firstArray === verifyTasks &&\n      secondArray.length < MAX_LIST_ITEMS_COUNT\n    ) {\n      this.setState({\n        verifyTasks: filterTask,\n        done: [...secondArray, data]\n      });\n    }\n\n    this.setState({\n      currentPageTasks: this.PaginationReturnPage(tasks, currentPageTasks),\n      currentPageDev: this.PaginationReturnPage(devTasks, currentPageDev),\n      currentPageVerify: this.PaginationReturnPage(\n        verifyTasks,\n        currentPageVerify\n      ),\n      currentPageDone: this.PaginationReturnPage(done, currentPageDone)\n    });\n  };\n\n  sortToDoTasks = property => {\n    let sortOrder = 1;\n    if (property[0] === \"-\") {\n      sortOrder = -1;\n      property = property.substr(1);\n    }\n    return (a, b) => {\n      let result =\n        a[property] < b[property] ? -1 : a[property] > b[property] ? 1 : 0;\n      return result * sortOrder;\n    };\n  };\n\n  handleDelete = (id, array) => {\n    const { tasks, currentPageTasks, currentPageDone, done } = this.state;\n\n    const arrCopy = [...array];\n    const filterTask = arrCopy.filter(task => task.id !== id);\n    if (array === tasks) {\n      this.setState({\n        tasks: filterTask\n      });\n    } else if (array === done) {\n      this.setState({\n        done: filterTask\n      });\n    }\n\n    this.setState({\n      currentPageTasks: this.PaginationReturnPage(tasks, currentPageTasks),\n      currentPageDone: this.PaginationReturnPage(done, currentPageDone)\n    });\n  };\n\n  handleDeleteAll = event => {\n    const id = event.target.id;\n    if (id === \"tasks\") {\n      this.setState({\n        [id]: [],\n        currentPageTasks: 1\n      });\n    } else if (id === \"done\") {\n      this.setState({\n        [id]: [],\n        currentPageDone: 1\n      });\n    }\n  };\n\n  PaginationReturnPage = (array, pageTasks) => {\n    if (array.length === 4) {\n      return (pageTasks = 1);\n    } else if (array.length % 3 === 1 && pageTasks > 1) {\n      return (pageTasks = pageTasks - 1);\n    } else {\n      return pageTasks;\n    }\n  };\n\n  handleSelect = event => {\n    this.setState({\n      taskType: event.target.value\n    });\n\n    switch (event.target.value) {\n      case \"review\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#57A1C4\" }\n        });\n      case \"code\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#9370DB\" }\n        });\n      case \"test\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#CBC8C8\" }\n        });\n      case \"doc\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#92C1FF\" }\n        });\n      case \"analyze\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#68D384\" }\n        });\n      case \"fix\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#E5AE3A\" }\n        });\n      case \"others\":\n        return this.setState({\n          taskColor: { backgroundColor: \"#8F9A9F\" }\n        });\n      default:\n        return this.setState({\n          taskColor: { backgroundColor: \"black\" }\n        });\n    }\n  };\n\n  handleFilterAll = event => {\n    this.setState({\n      filterType: event.target.value,\n      currentPageTasks: 1,\n      currentPageDev: 1,\n      currentPageVerify: 1,\n      currentPageDone: 1\n    });\n  };\n\n  handleTasksPerPage = event => {\n    this.setState({\n      tasksPerPage: event.target.value,\n      currentPageTasks: 1,\n      currentPageDev: 1,\n      currentPageVerify: 1,\n      currentPageDone: 1\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Blobs />\n\n        <InputArea\n          onChange={this.handleInput}\n          enter={this.handleEnter}\n          inputValue={this.state.inputValue}\n          priority={this.state.priority}\n          priorityStatus={this.handlePriority}\n          addTask={this.handleAddTask}\n          addActive={this.state.AddActive}\n          color={this.state.taskColor}\n          type={this.state.taskType}\n          select={this.handleSelect}\n          date={this.state.date}\n          handleDate={this.handleDate}\n          minimumDate={this.state.minimumDate}\n          maximumDate={this.state.maximumDate}\n        />\n\n        <Filtering\n          filterType={this.state.filterType}\n          filterAll={this.handleFilterAll}\n          tasksPerPage={this.state.tasksPerPage}\n          handleTasksPerPage={this.handleTasksPerPage}\n        />\n\n        <hr />\n\n        <Board\n          currentPageDev={this.state.currentPageDev}\n          currentPageDone={this.state.currentPageDone}\n          currentPageTasks={this.state.currentPageTasks}\n          currentPageVerify={this.state.currentPageVerify}\n          tasksPerPage={this.state.tasksPerPage}\n          handleClickPage={this.handleClickPage}\n          tasks={this.state.tasks}\n          deleteAll={this.handleDeleteAll}\n          devTasks={this.state.devTasks}\n          verifyTasks={this.state.verifyTasks}\n          done={this.state.done}\n          filterType={this.state.filterType}\n          acceptRefuseStatus={this.state.acceptRefuse}\n          acceptRefuse={this.handleAcceptRefuse}\n          handlePush={this.handlePush}\n          handleDelete={this.handleDelete}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}